{"version":3,"sources":["components/Account.js","components/Modals/NewAddress.js","symbols.js","components/Modals/NewAssociation.js","components/Modals/RenewAddress.js","components/Modals/TransferAddress.js","components/Addresses.js","components/Modals/NewDomain.js","components/Modals/RenewDomain.js","components/Modals/SetDomainPub.js","components/Modals/TransferDomain.js","components/Domains.js","Home.js","App.js","serviceWorker.js","index.js"],"names":["Account","activeUser","this","props","ual","Segment","secondary","stacked","Header","Content","Subheader","accountName","requestPermission","Button","basic","onClick","logout","style","marginLeft","content","showModal","size","primary","Component","defaultFields","fio_address","owner_fio_public_key","max_fee","actor","tpid","NewAddress","state","account","undefined","balance","errors","fee","fields","show","onOpen","e","data","resetData","getAccount","getBalance","getFee","setState","rpc","get_account","then","Object","assign","permissions","filter","p","perm_name","required_auth","keys","key","get_currency_balance","get_table_rows","code","table","scope","key_type","index_position","lower_bound","upper_bound","limit","results","rows","suf_amount","hide","onChange","name","value","transact","a","tx","actions","authorization","permission","signTransaction","expireSeconds","blocksBehind","onSuccess","cause","json","color","domain","floated","triggerContent","Modal","closeIcon","padded","marginTop","Table","Row","Cell","textAlign","Icon","loading","toFixed","Form","error","length","onSubmit","map","field","Field","Message","info","header","textTransform","replace","Input","pointing","clearing","open","onClose","trigger","icon","symbols","public_addresses","NewAssociation","address","onChangeAddress","console","log","s","text","Dropdown","autoFocus","options","search","selection","RenewAddress","disabled","new_owner_fio_public_key","TransferAddress","n","Addresses","addresses","sync","getAddresses","partitionQuery","owner_account","partition","others","Container","fluid","attached","class","href","aria-hidden","striped","HeaderCell","Body","collapsing","verticalAlign","definition","bundleeligiblecountdown","Date","expiration","toUTCString","chain_code","token_code","public_address","fio_domain","NewDomain","RenewDomain","is_public","SetDomainPub","TransferDomain","Domains","domains","getDomains","domainhash","uniqBy","matching","toLocaleDateString","Home","chains","panes","menuItem","render","Tab","Pane","margin","Grid","relaxed","Column","width","chainId","columns","warning","menu","tabular","mainnet","rpcEndpoints","protocol","host","port","testnet","UALWrapper","chain","window","location","anchor","Anchor","appName","scatter","Scatter","authenticators","TestAppConsumer","withUAL","App","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","catch","ReactDOM","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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O,MAAM,MAAM,MAAM,OAAO,MAAM,MAAM,MAAM,MAAM,OAAO,MAAM,MAAM,QAAQ,OAAO,MAAM,OAAO,MAAM,OAAO,MAAM,MAAM,OAAO,OAAO,QAAQ,OAAO,OAAO,MAAM,OAAO,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,KAAK,MAAM,MAAM,QAAQ,SAAS,OAAO,OAAO,KAAK,MAAM,MAAM,MAAM,MAAM,OAAO,MAAM,OAAO,MAAM,MAAM,OAAO,KAAK,OAAO,OAAO,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,MAAM,MAAM,MAAM,OAAO,MAAM,OAAO,MAAM,MAAM,MAAM,MAAM,OAAO,OAAO,MAAM,OAAO,MAAM,MAAM,MAAM,QAAQ,OAAO,MAAM,MAAM,OAAO,MAAM,MAAM,MAAM,MAAM,MAAM,QAAQ,MAAM,OAAO,MAAM,QAAQ,KAAK,MAAM,OAAO,OAAO,MAAM,MAAM,OAAO,OAAO,OAAO,OAAO,KAAK,OAAO,MAAM,MAAM,KAAK,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,KAAK,MAAM,OAAO,OAAO,MAAM,OAAO,MAAM,MAAM,MAAM,MAAM,OAAO,QAAQ,MAAM,KAAK,MAAM,OAAO,MAAM,MAAM,MAAM,MAAM,OAAO,MAAM,MAAM,MAAM,MAAM,OAAO,MAAM,OAAO,MAAM,OAAO,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,KAAK,MAAM,MAAM,OAAO,MAAM,MAAM,MAAM,OAAO,OAAO,OAAO,OAAO,MAAM,MAAM,OAAO,MAAM,OAAO,MAAM,MAAM,MAAM,OAAO,MAAM,MAAM,OAAO,OAAO,OAAO,MAAM,MAAM,MAAM,OAAO,OAAO,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,OAAO,OAAO,OAAO,MAAM,MAAM,MAAM,OAAO,MAAM,MAAM,OAAO,MAAM,MAAM,MAAM,QAAQ,OAAO,MAAM,MAAM,KAAK,OAAO,MAAM,MAAM,MAAM,OAAO,MAAM,MAAM,MAAM,OAAO,MAAM,KAAK,OAAO,MAAM,OAAO,OAAO,OAAO,QAAQ,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,OAAO,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,OAAO,OAAO,OAAO,OAAO,MAAM,OAAO,MAAM,MAAM,QAAQ,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,OAAO,OAAO,MAAM,OAAO,MAAM,MAAM,MAAM,OAAO,MAAM,MAAM,OAAO,SAAS,MAAM,MAAM,OAAO,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,OAAO,MAAM,MAAM,MAAM,MAAM,OAAO,OAAO,QAAQ,MAAM,MAAM,MAAM,MAAM,KAAK,MAAM,MAAM,MAAM,MAAM,OAAO,MAAM,QAAQ,MAAM,MAAM,MAAM,MAAM,OAAO,MAAM,MAAM,OAAO,OAAO,MAAM,MAAM,OAAO,OAAO,OAAO,OAAO,MAAM,MAAM,MAAM,MAAM,OAAO,MAAM,MAAM,QAAQ,QAAQ,MAAM,MAAM,OAAO,MAAM,OAAO,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,MAAM,MAAM,OAAO,MAAM,MAAM,QAAQ,MAAM,MAAM,QAAQ,MAAM,MAAM,OAAO,OAAO,MAAM,MAAM,QAAQ,MAAM,OAAO,MAAM,MAAM,OAAO,OAAO,OAAO,MAAM,MAAM,OAAO,MAAM,OAAO,OAAO,MAAM,OAAO,SAAS,OAAO,MAAM,OAAO,QAAQ,SAAS,MAAM,OAAO,MAAM,OAAO,OAAO,KAAK,QAAQ,OAAO,MAAM,MAAM,MAAM,SAAS,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,QAAQ,QAAQ,OAAO,OAAO,MAAM,OAAO,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,QAAQ,QAAQ,MAAM,QAAQ,MAAM,MAAM,QAAQ,MAAM,QAAQ,MAAM,OAAO,QAAQ,OAAO,MAAM,MAAM,MAAM,MAAM,QAAQ,MAAM,MAAM,QAAQ,MAAM,QAAQ,MAAM,OAAO,OAAO,MAAM,OAAO,MAAM,MAAM,OAAO,MAAM,MAAM,OAAO,OAAO,MAAM,KAAK,QAAQ,MAAM,MAAM,KAAK,MAAM,OAAO,MAAM,QAAQ,MAAM,QAAQ,MAAM,MAAM,OAAO,MAAM,MAAM,MAAM,MAAM,OAAO,KAAK,MAAM,MAAM,MAAM,OAAO,MAAM,QAAQ,MAAM,MAAM,MAAM,OAAO,QAAQ,OAAO,OAAO,OAAO,MAAM,OAAO,QAAQ,MAAM,OAAO,MAAM,MAAM,QAAQ,OAAO,KAAK,KAAK,MAAM,MAAM,MAAM,OAAO,MAAM,MAAM,MAAM,MAAM,QAAQ,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,OAAO,MAAM,MAAM,MAAM,MAAM,OAAO,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,MAAM,MAAM,MAAM,MAAM,OAAO,MAAM,MAAM,MAAM,MAAM,MAAM,QAAQ,OAAO,MAAM,MAAM,QAAQ,MAAM,MAAM,MAAM,OAAO,MAAM,MAAM,OAAO,MAAM,MAAM,OAAO,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,MAAM,QAAQ,MAAM,MAAM,MAAM,OAAO,MAAM,MAAM,OAAO,MAAM,KAAK,OCav1JlG,EAAgB,CACpBC,YAAa,GACbkG,iBAAkB,GAClBhG,QAAS,GACTC,MAAO,GACPC,KAAM,iBAGa+F,E,kDACnB,WAAYzH,GAAQ,IAAD,8BACjB,cAAMA,IAiBRoC,OAAS,SAACC,EAAGC,GACX,EAAKC,YACL,EAAKC,aACL,EAAKC,aACL,EAAKC,UAtBY,EAwBnBH,UAAY,kBAAM,EAAKI,SAAS,CAC9Bd,aAASC,EACTC,aAASD,EACTE,OAAQ,GACRC,SAAKH,EACLI,OAAQa,OAAOC,OAAO,GAAI3B,EAAe,CACvCC,YAAa,EAAKtB,MAAM0H,QAAQnD,UA9BjB,EAiCnB/B,WAAa,WAAO,IACH1C,EAAiB,EAAKE,MAA7BC,IAAOH,WACfA,EAAW8C,IAAIC,YAAY/C,EAAWU,aAAasC,MAAK,SAACjB,GACvD,EAAKc,SAAS,CACZd,UACAK,OAAQa,OAAOC,OAAO,GAAI,EAAKpB,MAAMM,OAAQ,CAC3CT,MAAO3B,EAAWU,oBAvCP,EA4CnBiC,WAAa,WAAO,IACH3C,EAAiB,EAAKE,MAA7BC,IAAOH,WACfA,EAAW8C,IAAIY,qBAAqB,YAAa1D,EAAWU,YAAa,OAAOsC,MAAK,SAACf,GAAD,OAAa,EAAKY,SAAS,CAAEZ,gBA9CjG,EAgDnBW,OAAS,WACkC,EAAK1C,MAAtCC,IAAOH,WAAc8C,IACzBa,eAAe,CACjBC,KAAM,UACNC,MAAO,UACPC,MAAO,UACPC,SAAU,OACVC,eAAgB,EAChBC,YAAa,qCACbC,YAAa,qCACbC,MAAO,IACNnB,MAAK,SAACoB,GACP,EAAKvB,SAAS,CACZV,IAAKiC,EAAQC,KAAK,GAClBjC,OAAQa,OAAOC,OAAO,GAAI,EAAKpB,MAAMM,OAAQ,CAC3CV,QAAS0C,EAAQC,KAAK,GAAGC,mBA/Dd,EAoEnBC,KAAO,kBAAM,EAAK1B,SAAS,CAAER,MAAM,KApEhB,EAqEnBA,KAAO,kBAAM,EAAKQ,SAAS,CAAER,MAAM,KArEhB,EAsEnBmC,SAAW,SAACjC,EAAD,OAAMkC,EAAN,EAAMA,KAAMC,EAAZ,EAAYA,MAAZ,OAAwB,EAAK7B,SAAS,CAC/CT,OAAQa,OAAOC,OAAO,GAAI,EAAKpB,MAAMM,OAA7Ba,OAAA,IAAAA,CAAA,GACLwB,EAAOC,OAxEO,EA2EnBmD,gBAAkB,SAACtF,EAAD,GAAyB,IAAnBkC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MAC5BoD,QAAQC,IAAItD,EAAMC,GAClB,EAAK7B,SAAS,CACZT,OAAQa,OAAOC,OAAO,GAAI,EAAKpB,MAAMM,OAAQ,CAC3CsF,iBAAkB,CAACzE,OAAOC,OAAO,GAAI,EAAKpB,MAAMM,OAAOsF,iBAAiB,GAArDzE,OAAA,IAAAA,CAAA,GAChBwB,EAAOC,UAhFG,EAqFnBC,SArFmB,sBAqFR,oCAAAC,EAAA,6DACDxC,EAAW,EAAKN,MAAhBM,OACOpC,EAAiB,EAAKE,MAA7BC,IAAOH,WAFN,SAICU,EAAmCV,EAAnCU,YAAaC,EAAsBX,EAAtBW,kBACfkE,EAAK,CACTC,QAAS,CAAC,CACR/C,QAAS,cACT0C,KAAM,aACNM,cAAe,CAAC,CAAEpD,MAAOjB,EAAasE,WAAYrE,IAClD6B,KAAMJ,KAVH,SAaDpC,EAAWiF,gBAAgBJ,EAAI,CAAEK,cAAe,IAAKC,aAAc,IAblE,OAcP,EAAKjF,MAAMkF,YACX,EAAKb,OAfE,kDAiBPuD,QAAQC,IAAR,MACA,EAAKlF,SAAS,CACZX,OAAQ,KAAEmD,MAAMC,KAAKlD,SAnBhB,0DAnFT,EAAKqF,QAAUA,EAAQf,KAAI,SAACsB,GAAD,MAAQ,CACjCvE,IAAKuE,EACLC,KAAMD,EACNtD,MAAOsD,MAET,EAAKlG,MAAQ,CACXC,aAASC,EACTC,aAASD,EACTE,OAAQ,GACRC,SAAKH,EACLI,OAAQa,OAAOC,OAAO,GAAI3B,EAAe,CACvCC,YAAa,EAAKtB,MAAM0H,QAAQnD,OAElCpC,MAAM,GAfS,E,qDA4GT,IAAD,SAOHpC,KAAK6B,MALPG,EAFK,EAELA,QACAC,EAHK,EAGLA,OACAC,EAJK,EAILA,IACAC,EALK,EAKLA,OACAC,EANK,EAMLA,KAEF,OACE,kBAACsD,EAAA,EAAD,CACEC,WAAS,EACT1E,QACE,kBAACd,EAAA,EAAD,CACEyF,QAAM,EACNzE,KAAK,QACLJ,MAAO,CAAE8E,UAAW,IAEpB,kBAAC1F,EAAA,EAAD,CAASmF,MAAM,OAAOlF,WAAS,GAC7B,kBAAC0F,EAAA,EAAD,CAAO3E,KAAK,SACV,kBAAC2E,EAAA,EAAMC,IAAP,KACE,kBAACD,EAAA,EAAME,KAAP,4BAGA,kBAACF,EAAA,EAAME,KAAP,CAAYC,UAAU,SAClBjE,EAEE,gCAASA,EAAQ,IAGjB,kBAACkE,EAAA,EAAD,CAAM1B,KAAK,UAAU2B,SAAO,MAKpC,kBAACL,EAAA,EAAMC,IAAP,KACE,kBAACD,EAAA,EAAME,KAAP,iCAGA,kBAACF,EAAA,EAAME,KAAP,CAAYC,UAAU,SAClB/D,EAEE,iCAAUA,EAAImC,WAAa,KAAY+B,QAAQ,GAA/C,QAGA,kBAACF,EAAA,EAAD,CAAM1B,KAAK,UAAU2B,SAAO,QAOxC,kBAACE,EAAA,EAAD,CACEC,MAAOrE,EAAOsE,OACdC,SAAUxG,KAAK0E,UAEd1B,OAAOO,KAAKpB,GAAQsE,KAAI,SAACC,GAAW,IAAD,EAClBzE,EAAOkB,QAAO,SAACb,GAAD,OAAOA,EAAEkC,OAASkC,KAAzCJ,EAD2B,oBAElC,MAAc,SAAVI,IACU,qBAAVA,EAEA,kBAACL,EAAA,EAAKM,MAAN,KACE,6CACA,kBAACN,EAAA,EAAK4B,SAAN,CACEC,WAAS,EACT3D,SAAU,EAAKqD,gBACfO,QAAS,EAAKX,QACdhD,KAAK,aACL4D,QAAM,EACNC,WAAS,IAEX,+CACA,kBAAChC,EAAA,EAAKY,MAAN,CACEzC,KAAK,aACLD,SAAU,EAAKqD,gBACfQ,QAAM,EACNC,WAAS,IAEX,iDACA,kBAAChC,EAAA,EAAKY,MAAN,CACEzC,KAAK,iBACLD,SAAU,EAAKqD,gBACfQ,QAAM,EACNC,WAAS,KAMf,kBAAChC,EAAA,EAAKM,MAAN,KACE,2BAAO5F,MAAO,CACZgG,cAAe,eAEdL,EAAMM,QAAQ,KAAM,MAEvB,kBAACX,EAAA,EAAKY,MAAN,CACEX,QAAQA,GACJ,CACArF,QAASqF,EAAMA,MACfY,SAAU,SAId1C,KAAMkC,EACNnC,SAAU,EAAKA,SACfE,MAAOtC,EAAOuE,UAKtB,kBAACE,EAAA,EAAD,CACEN,OAAK,EACLQ,OAAO,qDACP7F,QAAQ,sEAEV,kBAACd,EAAA,EAAD,CAASS,OAAK,EAACuG,UAAQ,GACrB,kBAACxG,EAAA,EAAD,CACEM,QAAQ,0BACRuE,QAAQ,QACRpE,SAAO,OAMjB0F,OAAO,uBACPM,KAAMhF,EACNiF,QAASrH,KAAKsE,KACdjC,OAAQrC,KAAKqC,OACbiF,QACE,kBAAC3G,EAAA,EAAD,CACEC,OAAK,EACLK,QAAO,0BACPsG,KAAK,OACL1G,QAASb,KAAKoC,KACdhB,SAAO,EACPD,KAAK,gB,GApP2BE,aCVtCC,EAAgB,CACpBC,YAAa,GACbE,QAAS,GACTC,MAAO,GACPC,KAAM,iBAGa2G,E,kDACnB,WAAYrI,GAAQ,IAAD,8BACjB,cAAMA,IAYRoC,OAAS,SAACC,EAAGC,GACX,EAAKC,YACL,EAAKC,aACL,EAAKC,aACL,EAAKC,UAjBY,EAmBnBH,UAAY,kBAAM,EAAKI,SAAS,CAC9Bd,aAASC,EACTC,aAASD,EACTE,OAAQ,GACRC,SAAKH,EACLI,OAAQa,OAAOC,OAAO,GAAI3B,EAAe,CACvCC,YAAa,EAAKtB,MAAM0H,QAAQnD,UAzBjB,EA4BnB/B,WAAa,WAAO,IACH1C,EAAiB,EAAKE,MAA7BC,IAAOH,WACfA,EAAW8C,IAAIC,YAAY/C,EAAWU,aAAasC,MAAK,SAACjB,GACvD,EAAKc,SAAS,CACZd,UACAK,OAAQa,OAAOC,OAAO,GAAI,EAAKpB,MAAMM,OAAQ,CAC3CT,MAAO3B,EAAWU,oBAlCP,EAuCnBiC,WAAa,WAAO,IACH3C,EAAiB,EAAKE,MAA7BC,IAAOH,WACfA,EAAW8C,IAAIY,qBAAqB,YAAa1D,EAAWU,YAAa,OAAOsC,MAAK,SAACf,GAAD,OAAa,EAAKY,SAAS,CAAEZ,gBAzCjG,EA2CnBW,OAAS,WACkC,EAAK1C,MAAtCC,IAAOH,WAAc8C,IACzBa,eAAe,CACjBC,KAAM,UACNC,MAAO,UACPC,MAAO,UACPC,SAAU,OACVC,eAAgB,EAChBC,YAAa,qCACbC,YAAa,qCACbC,MAAO,IACNnB,MAAK,SAACoB,GACP,EAAKvB,SAAS,CACZV,IAAKiC,EAAQC,KAAK,GAClBjC,OAAQa,OAAOC,OAAO,GAAI,EAAKpB,MAAMM,OAAQ,CAC3CV,QAAS0C,EAAQC,KAAK,GAAGC,mBA1Dd,EA+DnBC,KAAO,kBAAM,EAAK1B,SAAS,CAAER,MAAM,KA/DhB,EAgEnBA,KAAO,kBAAM,EAAKQ,SAAS,CAAER,MAAM,KAhEhB,EAiEnBmC,SAAW,SAACjC,EAAD,OAAMkC,EAAN,EAAMA,KAAMC,EAAZ,EAAYA,MAAZ,OAAwB,EAAK7B,SAAS,CAC/CT,OAAQa,OAAOC,OAAO,GAAI,EAAKpB,MAAMM,OAA7Ba,OAAA,IAAAA,CAAA,GACLwB,EAAOC,OAnEO,EAsEnBC,SAtEmB,sBAsER,oCAAAC,EAAA,6DACDxC,EAAW,EAAKN,MAAhBM,OACOpC,EAAiB,EAAKE,MAA7BC,IAAOH,WAFN,SAICU,EAAmCV,EAAnCU,YAAaC,EAAsBX,EAAtBW,kBACfkE,EAAK,CACTC,QAAS,CAAC,CACR/C,QAAS,cACT0C,KAAM,eACNM,cAAe,CAAC,CAAEpD,MAAOjB,EAAasE,WAAYrE,IAClD6B,KAAMJ,KAVH,SAaDpC,EAAWiF,gBAAgBJ,EAAI,CAAEK,cAAe,IAAKC,aAAc,IAblE,OAcP,EAAKjF,MAAMkF,YACX,EAAKb,OAfE,kDAiBP,EAAK1B,SAAS,CACZX,OAAQ,KAAEmD,MAAMC,KAAKlD,SAlBhB,0DApET,EAAKN,MAAQ,CACXC,aAASC,EACTC,aAASD,EACTE,OAAQ,GACRC,SAAKH,EACLI,OAAQa,OAAOC,OAAO,GAAI3B,EAAe,CACvCC,YAAa,EAAKtB,MAAM0H,QAAQnD,OAElCpC,MAAM,GAVS,E,qDA4FT,IAAD,SAOHpC,KAAK6B,MALPG,EAFK,EAELA,QACAC,EAHK,EAGLA,OACAC,EAJK,EAILA,IACAC,EALK,EAKLA,OACAC,EANK,EAMLA,KAEF,OACE,kBAACsD,EAAA,EAAD,CACEC,WAAS,EACT1E,QACE,kBAACd,EAAA,EAAD,CACEyF,QAAM,EACNzE,KAAK,QACLJ,MAAO,CAAE8E,UAAW,IAEpB,kBAAC1F,EAAA,EAAD,CAASmF,MAAM,OAAOlF,WAAS,GAC7B,kBAAC0F,EAAA,EAAD,CAAO3E,KAAK,SACV,kBAAC2E,EAAA,EAAMC,IAAP,KACE,kBAACD,EAAA,EAAME,KAAP,4BAGA,kBAACF,EAAA,EAAME,KAAP,CAAYC,UAAU,SAClBjE,EAEE,gCAASA,EAAQ,IAGjB,kBAACkE,EAAA,EAAD,CAAM1B,KAAK,UAAU2B,SAAO,MAKpC,kBAACL,EAAA,EAAMC,IAAP,KACE,kBAACD,EAAA,EAAME,KAAP,iCAGA,kBAACF,EAAA,EAAME,KAAP,CAAYC,UAAU,SAClB/D,EAEE,iCAAUA,EAAImC,WAAa,KAAY+B,QAAQ,GAA/C,QAGA,kBAACF,EAAA,EAAD,CAAM1B,KAAK,UAAU2B,SAAO,QAOxC,kBAACE,EAAA,EAAD,CACEC,MAAOrE,EAAOsE,OACdC,SAAUxG,KAAK0E,UAEd1B,OAAOO,KAAKpB,GAAQsE,KAAI,SAACC,GAAW,IAAD,EAClBzE,EAAOkB,QAAO,SAACb,GAAD,OAAOA,EAAEkC,OAASkC,KAAzCJ,EAD2B,oBAElC,MAAc,SAAVI,GAEF,kBAACL,EAAA,EAAKM,MAAN,KACE,2BAAO5F,MAAO,CACZgG,cAAe,eAEdL,EAAMM,QAAQ,KAAM,MAEvB,kBAACX,EAAA,EAAKY,MAAN,CACEX,QAAQA,GACJ,CACArF,QAASqF,EAAMA,MACfY,SAAU,SAId1C,KAAMkC,EACNnC,SAAU,EAAKA,SACfE,MAAOtC,EAAOuE,SAKtB,kBAACE,EAAA,EAAD,CACEN,OAAK,EACLQ,OAAO,qDACP7F,QAAQ,sEAEV,kBAACd,EAAA,EAAD,CAASS,OAAK,EAACuG,UAAQ,GACrB,kBAACxG,EAAA,EAAD,CACEM,QAAQ,gBACRuE,QAAQ,QACRpE,SAAO,OAMjB0F,OAAO,oBACPM,KAAMhF,EACNiF,QAASrH,KAAKsE,KACdjC,OAAQrC,KAAKqC,OACbiF,QACE,kBAAC3G,EAAA,EAAD,CACEC,OAAK,EACLK,QAAO,gBACPJ,QAASb,KAAKoC,KACdhB,SAAO,EACPD,KAAK,gB,GAtMyBE,aCPpCC,EAAgB,CACpBiH,UAAU,EACVhH,YAAa,GACbiH,yBAA0B,GAC1B/G,QAAS,GACTC,MAAO,GACPC,KAAM,iBAGa8G,E,4MACnB5G,MAAQ,CACNC,aAASC,EACTC,aAASD,EACTwG,UAAU,EACVtG,OAAQ,GACRC,SAAKH,EACLI,OAAQb,EACRc,MAAM,G,EAERC,OAAS,SAACC,EAAGC,GACX,EAAKC,YACL,EAAKC,aACL,EAAKC,aACL,EAAKC,U,EAEPH,UAAY,kBAAM,EAAKI,SAAS,CAC9Bd,aAASC,EACTC,aAASD,EACTE,OAAQ,GACRC,SAAKH,EACLI,OAAQa,OAAOC,OAAO,GAAI3B,EAAe,CACvCC,YAAa,EAAKtB,MAAM0H,QAAQnD,U,EAGpC/B,WAAa,WAAO,IACH1C,EAAiB,EAAKE,MAA7BC,IAAOH,WACfA,EAAW8C,IAAIC,YAAY/C,EAAWU,aAAasC,MAAK,SAACjB,GACvD,EAAKc,SAAS,CACZd,UACAK,OAAQa,OAAOC,OAAO,GAAI,EAAKpB,MAAMM,OAAQ,CAC3CT,MAAO3B,EAAWU,oB,EAK1BiC,WAAa,WAAO,IACH3C,EAAiB,EAAKE,MAA7BC,IAAOH,WACfA,EAAW8C,IAAIY,qBAAqB,YAAa1D,EAAWU,YAAa,OAAOsC,MAAK,SAACf,GAAD,OAAa,EAAKY,SAAS,CAAEZ,gB,EAEpHW,OAAS,WACkC,EAAK1C,MAAtCC,IAAOH,WAAc8C,IACzBa,eAAe,CACjBC,KAAM,UACNC,MAAO,UACPC,MAAO,UACPC,SAAU,OACVC,eAAgB,EAChBC,YAAa,qCACbC,YAAa,qCACbC,MAAO,IACNnB,MAAK,SAACoB,GACHA,EAAQC,KAAKmC,OACf,EAAK3D,SAAS,CACZ2F,UAAU,EACVrG,IAAKiC,EAAQC,KAAK,GAClBjC,OAAQa,OAAOC,OAAO,GAAI,EAAKpB,MAAMM,OAAQ,CAC3CV,QAAS0C,EAAQC,KAAK,GAAGC,eAI7B,EAAKzB,SAAS,CACZ2F,UAAU,Q,EAKlBjE,KAAO,kBAAM,EAAK1B,SAAS,CAAER,MAAM,K,EACnCA,KAAO,kBAAM,EAAKQ,SAAS,CAAER,MAAM,K,EACnCmC,SAAW,SAACjC,EAAD,OAAMkC,EAAN,EAAMA,KAAMC,EAAZ,EAAYA,MAAZ,OAAwB,EAAK7B,SAAS,CAC/CT,OAAQa,OAAOC,OAAO,GAAI,EAAKpB,MAAMM,OAA7Ba,OAAA,IAAAA,CAAA,GACLwB,EAAOC,O,EAGZC,S,sBAAW,oCAAAC,EAAA,6DACDxC,EAAW,EAAKN,MAAhBM,OACOpC,EAAiB,EAAKE,MAA7BC,IAAOH,WAFN,SAICU,EAAmCV,EAAnCU,YAAaC,EAAsBX,EAAtBW,kBACfkE,EAAK,CACTC,QAAS,CAAC,CACR/C,QAAS,cACT0C,KAAM,cACNM,cAAe,CAAC,CAAEpD,MAAOjB,EAAasE,WAAYrE,IAClD6B,KAAMJ,KAVH,SAaDpC,EAAWiF,gBAAgBJ,EAAI,CAAEK,cAAe,IAAKC,aAAc,IAblE,OAcP,EAAKjF,MAAMkF,YACX,EAAKb,OAfE,kDAiBPuD,QAAQC,IAAR,MAEA,EAAKlF,SAAS,CACZX,OAAQ,KAAEmD,MAAMC,KAAKlD,SApBhB,0D,uDAwBD,IAAD,SAQHnC,KAAK6B,MANPG,EAFK,EAELA,QACAuG,EAHK,EAGLA,SACAtG,EAJK,EAILA,OACAC,EALK,EAKLA,IACAC,EANK,EAMLA,OACAC,EAPK,EAOLA,KAEF,OAAImG,EAEA,kBAAC7C,EAAA,EAAD,CACEC,WAAS,EACT1E,QACE,kBAACd,EAAA,EAAD,CACEyF,QAAM,EACNzE,KAAK,QACLJ,MAAO,CAAE8E,UAAW,IAHtB,8BAQFiB,OAAO,yBACPM,KAAMhF,EACNiF,QAASrH,KAAKsE,KACdjC,OAAQrC,KAAKqC,OACbiF,QACE,kBAAC3G,EAAA,EAAD,CACEC,OAAK,EACLK,QAAO,mBACPJ,QAASb,KAAKoC,KACdhB,SAAO,EACPD,KAAK,YAOb,kBAACuE,EAAA,EAAD,CACEC,WAAS,EACT1E,QACE,kBAACd,EAAA,EAAD,CACEyF,QAAM,EACNzE,KAAK,QACLJ,MAAO,CAAE8E,UAAW,IAEpB,kBAAC1F,EAAA,EAAD,CAASmF,MAAM,OAAOlF,WAAS,GAC7B,kBAAC0F,EAAA,EAAD,CAAO3E,KAAK,SACV,kBAAC2E,EAAA,EAAMC,IAAP,KACE,kBAACD,EAAA,EAAME,KAAP,4BAGA,kBAACF,EAAA,EAAME,KAAP,CAAYC,UAAU,SAClBjE,EAEE,gCAASA,EAAQ,IAGjB,kBAACkE,EAAA,EAAD,CAAM1B,KAAK,UAAU2B,SAAO,MAKpC,kBAACL,EAAA,EAAMC,IAAP,KACE,kBAACD,EAAA,EAAME,KAAP,6BAGA,kBAACF,EAAA,EAAME,KAAP,CAAYC,UAAU,SAClB/D,EAEE,iCAAUA,EAAImC,WAAa,KAAY+B,QAAQ,GAA/C,QAGA,kBAACF,EAAA,EAAD,CAAM1B,KAAK,UAAU2B,SAAO,QAOxC,kBAACE,EAAA,EAAD,CACEC,MAAOrE,EAAOsE,OACdC,SAAUxG,KAAK0E,UAEd1B,OAAOO,KAAKpB,GAAQgB,QAAO,SAAAuF,GAAC,MAAU,aAANA,KAAkBjC,KAAI,SAACC,GAAW,IAAD,EAChDzE,EAAOkB,QAAO,SAACb,GAAD,OAAOA,EAAEkC,OAASkC,KAAzCJ,EADyD,oBAEhE,MAAc,SAAVI,GAEF,kBAACL,EAAA,EAAKM,MAAN,KACE,2BAAO5F,MAAO,CACZgG,cAAe,eAEdL,EAAMM,QAAQ,KAAM,MAEvB,kBAACX,EAAA,EAAKY,MAAN,CACEX,QAAQA,GACJ,CACArF,QAASqF,EAAMA,MACfY,SAAU,SAId1C,KAAMkC,EACNnC,SAAU,EAAKA,SACfE,MAAOtC,EAAOuE,SAKtB,kBAACE,EAAA,EAAD,CACEN,OAAK,EACLQ,OAAO,qDACP7F,QAAQ,sEAEV,kBAACd,EAAA,EAAD,CAASS,OAAK,EAACuG,UAAQ,GACrB,kBAACxG,EAAA,EAAD,CACEM,QAAQ,mBACRuE,QAAQ,QACRpE,SAAO,OAMjB0F,OAAO,yBACPM,KAAMhF,EACNiF,QAASrH,KAAKsE,KACdjC,OAAQrC,KAAKqC,OACbiF,QACE,kBAAC3G,EAAA,EAAD,CACEC,OAAK,EACLK,QAAO,mBACPJ,QAASb,KAAKoC,KACdhB,SAAO,EACPD,KAAK,gB,GAzO4BE,aCJxBsH,E,4MACnB9G,MAAQ,CACN+G,UAAW,GACXpH,qBAAsB,I,EAQxBqH,KAAO,WAAO,IACG9I,EAAiB,EAAKE,MAA7BC,IAAOH,WACf,EAAK+I,aAAa/I,EAAWU,c,EAE/B0E,UAAY,WACV,EAAK0D,Q,EAEPC,aAAe,SAACrI,GAAiB,IACFoC,EAAY,EAAK5C,MAAtCC,IAAOH,WAAc8C,IAC7BA,EAAIa,eAAe,CACjBC,KAAM,cACNC,MAAO,WACPC,MAAO,cACPC,SAAU,OACVC,eAAgB,EAChBC,YAAavD,EACbwD,YAAaxD,EACbyD,MAAO,KACNnB,MAAK,SAACoB,GACP,IAAM4E,EAAiB,CACrBC,cAAevI,GAFE,EAIAwI,oBAAU,EAAKpH,MAAM+G,UAAWG,GAA1CG,EAJU,oBAKnBrG,EAAIC,YAAYrC,GAAasC,MAAK,SAACjB,GACjC,EAAKc,SAAS,CACZgG,UAAU,GAAD,mBACJM,GADI,YAEJ/E,EAAQC,OAEb5C,qBAAsBM,EAAQoB,YAAYC,QAAO,SAACC,GAAD,MAAuB,UAAhBA,EAAEC,aAAuB,GAAGC,cAAcC,KAAK,GAAGC,a,kEAlChFxD,KAAKC,MAA7BC,IAAOH,YAEbC,KAAK6I,S,+BAqCC,IAAD,OAELD,EACE5I,KAAK6B,MADP+G,UAEF,OACE,kBAACO,EAAA,EAAD,CAAWC,OAAK,GACd,kBAACjJ,EAAA,EAAD,CACEkJ,SAAS,MACTlC,UAAQ,EACR/G,WAAS,GAET,kBAACE,EAAA,EAAD,CACEkF,QAAQ,OACRrE,KAAK,SAFP,gBAKE,kBAACb,EAAA,EAAOE,UAAR,qEAIF,kBAACG,EAAA,EAAD,CACEM,QAAQ,eACRuE,QAAQ,QACR+B,KAAK,UACL1G,QAASb,KAAK6I,OAEhB,kBAAC,EAAD,CACEjI,OAAO,EACP0E,MAAM,OACNE,QAAQ,QACRL,UAAWnF,KAAKmF,UAChBjF,IAAKF,KAAKC,MAAMC,MAElB,uBAAGoJ,MAAM,+BAA+BC,KAAO,6DAA+DvJ,KAAK6B,MAAML,sBAAuB,uBAAGgI,cAAY,OAAOF,MAAM,gBAA5K,qBAECV,EAAUrC,QAET,kBAACpG,EAAA,EAAD,CACEkJ,SAAS,SACTlI,KAAK,QACL8E,UAAU,UAEV,kBAAC3F,EAAA,EAAD,iFAOJsI,EAAUrC,QAER,kBAACT,EAAA,EAAD,CACEuD,SAAS,SACTzD,QAAM,EACN6D,SAAO,GAEP,kBAAC3D,EAAA,EAAMxF,OAAP,KACE,kBAACwF,EAAA,EAAMC,IAAP,KACE,kBAACD,EAAA,EAAM4D,WAAP,oBAGA,kBAAC5D,EAAA,EAAM4D,WAAP,oBAKJ,kBAAC5D,EAAA,EAAM6D,KAAP,KACGf,EAAUnC,KAAI,SAACkB,GACd,OACE,kBAAC7B,EAAA,EAAMC,IAAP,KACE,kBAACD,EAAA,EAAME,KAAP,CAAY4D,YAAU,EAACC,cAAc,OACnC,kBAACvJ,EAAA,EAAD,KACGqH,EAAQnD,MAEX,kBAACsB,EAAA,EAAD,CAAOgE,YAAU,GACf,kBAAChE,EAAA,EAAM6D,KAAP,KACE,kBAAC7D,EAAA,EAAMC,IAAP,KACE,kBAACD,EAAA,EAAME,KAAP,oBACA,kBAACF,EAAA,EAAME,KAAP,KAAa2B,EAAQoC,0BAEvB,kBAACjE,EAAA,EAAMC,IAAP,KACE,kBAACD,EAAA,EAAME,KAAP,gBACA,kBAACF,EAAA,EAAME,KAAP,KAAc,IAAIgE,KAA0B,IAArBrC,EAAQsC,YAAoBC,gBAErD,kBAACpE,EAAA,EAAMC,IAAP,KACE,kBAACD,EAAA,EAAME,KAAP,cACA,kBAACF,EAAA,EAAME,KAAP,KACE,kBAAC,EAAD,CACE2B,QAASA,EACTxC,UAAW,EAAKA,UAChBjF,IAAK,EAAKD,MAAMC,QAItB,kBAAC4F,EAAA,EAAMC,IAAP,KACE,kBAACD,EAAA,EAAME,KAAP,iBACA,kBAACF,EAAA,EAAME,KAAP,KACE,kBAAC,EAAD,CACE2B,QAASA,EACTxC,UAAW,EAAKA,UAChBjF,IAAK,EAAKD,MAAMC,WAO5B,kBAAC4F,EAAA,EAAME,KAAP,CAAYC,UAAU,SAClB0B,EAAQiB,UAAUrC,OAEhB,kBAACT,EAAA,EAAD,CAAOgE,YAAU,GACf,kBAAChE,EAAA,EAAMxF,OAAP,KACE,kBAACwF,EAAA,EAAMC,IAAP,KACE,kBAACD,EAAA,EAAM4D,WAAP,cACA,kBAAC5D,EAAA,EAAM4D,WAAP,cACA,kBAAC5D,EAAA,EAAM4D,WAAP,kBAGJ,kBAAC5D,EAAA,EAAM6D,KAAP,KACGhC,EAAQiB,UAAUnC,KAAI,SAAC9B,GAAD,OACrB,kBAACmB,EAAA,EAAMC,IAAP,KACE,kBAACD,EAAA,EAAME,KAAP,KAAarB,EAAEwF,YACf,kBAACrE,EAAA,EAAME,KAAP,KAAarB,EAAEyF,YACf,kBAACtE,EAAA,EAAME,KAAP,KACGrB,EAAE0F,sBAQb,kBAAClK,EAAA,EAAD,CAAS8F,UAAU,QACjB,kBAAC3F,EAAA,EAAD,CAAQa,KAAK,SAAb,0BAEE,kBAACb,EAAA,EAAOE,UAAR,2EAOR,kBAAC,EAAD,CACEmH,QAASA,EACTxC,UAAW,EAAKA,UAChBjF,IAAK,EAAKD,MAAMC,kB,GA9LHmB,aCLjCC,EAAgB,CACpBgJ,WAAY,GACZ9I,qBAAsB,GACtBC,QAAS,GACTC,MAAO,GACPC,KAAM,iBAGa4I,E,4MACnB1I,MAAQ,CACNC,aAASC,EACTC,aAASD,EACTE,OAAQ,GACRC,SAAKH,EACLI,OAAQb,EACRc,MAAM,G,EAERC,OAAS,SAACC,EAAGC,GACX,EAAKC,YACL,EAAKC,aACL,EAAKC,aACL,EAAKC,U,EAEPH,UAAY,kBAAM,EAAKI,SAAS,CAC9Bd,aAASC,EACTC,aAASD,EACTE,OAAQ,GACRC,SAAKH,EACLI,OAAQb,K,EAEVmB,WAAa,WAAO,IACH1C,EAAiB,EAAKE,MAA7BC,IAAOH,WACfA,EAAW8C,IAAIC,YAAY/C,EAAWU,aAAasC,MAAK,SAACjB,GACvD,EAAKc,SAAS,CACZd,UACAK,OAAQa,OAAOC,OAAO,GAAI,EAAKpB,MAAMM,OAAQ,CAC3CT,MAAO3B,EAAWU,YAClBe,qBAAsBM,EAAQoB,YAAYC,QAAO,SAACC,GAAD,MAAuB,UAAhBA,EAAEC,aAAuB,GAAGC,cAAcC,KAAK,GAAGC,Y,EAKlHd,WAAa,WAAO,IACH3C,EAAiB,EAAKE,MAA7BC,IAAOH,WACfA,EAAW8C,IAAIY,qBAAqB,YAAa1D,EAAWU,YAAa,OAAOsC,MAAK,SAACf,GAAD,OAAa,EAAKY,SAAS,CAAEZ,gB,EAEpHW,OAAS,WACkC,EAAK1C,MAAtCC,IAAOH,WAAc8C,IACzBa,eAAe,CACjBC,KAAM,UACNC,MAAO,UACPC,MAAO,UACPC,SAAU,OACVC,eAAgB,EAChBC,YAAa,qCACbC,YAAa,qCACbC,MAAO,IACNnB,MAAK,SAACoB,GACP,EAAKvB,SAAS,CACZV,IAAKiC,EAAQC,KAAK,GAClBjC,OAAQa,OAAOC,OAAO,GAAI,EAAKpB,MAAMM,OAAQ,CAC3CV,QAAS0C,EAAQC,KAAK,GAAGC,mB,EAQjCC,KAAO,kBAAM,EAAK1B,SAAS,CAAER,MAAM,K,EACnCA,KAAO,kBAAM,EAAKQ,SAAS,CAAER,MAAM,K,EACnCmC,SAAW,SAACjC,EAAD,OAAMkC,EAAN,EAAMA,KAAMC,EAAZ,EAAYA,MAAZ,OAAwB,EAAK7B,SAAS,CAC/CT,OAAQa,OAAOC,OAAO,GAAI,EAAKpB,MAAMM,OAA7Ba,OAAA,IAAAA,CAAA,GACLwB,EAAOC,O,EAGZC,S,sBAAW,oCAAAC,EAAA,6DACDxC,EAAW,EAAKN,MAAhBM,OACOpC,EAAiB,EAAKE,MAA7BC,IAAOH,WAFN,SAICU,EAAmCV,EAAnCU,YAAaC,EAAsBX,EAAtBW,kBACfkE,EAAK,CACTC,QAAS,CAAC,CACR/C,QAAS,cACT0C,KAAM,YACNM,cAAe,CAAC,CAAEpD,MAAOjB,EAAasE,WAAYrE,IAClD6B,KAAMJ,KAVH,SAaDpC,EAAWiF,gBAAgBJ,EAAI,CAAEK,cAAe,IAAKC,aAAc,IAblE,OAcP,EAAKjF,MAAMkF,YACX,EAAKb,OAfE,kDAiBP,EAAK1B,SAAS,CACZX,OAAQ,KAAEmD,MAAMC,KAAKlD,SAlBhB,0D,uDAsBD,IAAD,SAOHnC,KAAK6B,MALPG,EAFK,EAELA,QACAC,EAHK,EAGLA,OACAC,EAJK,EAILA,IACAC,EALK,EAKLA,OACAC,EANK,EAMLA,KAEF,OACE,kBAACsD,EAAA,EAAD,CACEC,WAAS,EACT1E,QACE,kBAACd,EAAA,EAAD,CACEyF,QAAM,EACNzE,KAAK,QACLJ,MAAO,CAAE8E,UAAW,IAEpB,kBAAC1F,EAAA,EAAD,CAASmF,MAAM,OAAOlF,WAAS,GAC7B,kBAAC0F,EAAA,EAAD,CAAO3E,KAAK,SACV,kBAAC2E,EAAA,EAAMC,IAAP,KACE,kBAACD,EAAA,EAAME,KAAP,4BAGA,kBAACF,EAAA,EAAME,KAAP,CAAYC,UAAU,SAClBjE,EAEE,gCAASA,EAAQ,IAGjB,kBAACkE,EAAA,EAAD,CAAM1B,KAAK,UAAU2B,SAAO,MAKpC,kBAACL,EAAA,EAAMC,IAAP,KACE,kBAACD,EAAA,EAAME,KAAP,gCAGA,kBAACF,EAAA,EAAME,KAAP,CAAYC,UAAU,SAClB/D,EAEE,iCAAUA,EAAImC,WAAa,KAAY+B,QAAQ,GAA/C,QAGA,kBAACF,EAAA,EAAD,CAAM1B,KAAK,UAAU2B,SAAO,QAOxC,kBAACE,EAAA,EAAD,CACEC,MAAOrE,EAAOsE,OACdC,SAAUxG,KAAK0E,UAEd1B,OAAOO,KAAKpB,GAAQsE,KAAI,SAACC,GAAW,IAAD,EAClBzE,EAAOkB,QAAO,SAACb,GAAD,OAAOA,EAAEkC,OAASkC,KAAzCJ,EAD2B,oBAElC,MAAc,SAAVI,GAEF,kBAACL,EAAA,EAAKM,MAAN,KACE,2BAAO5F,MAAO,CACZgG,cAAe,eAEdL,EAAMM,QAAQ,KAAM,MAEvB,kBAACX,EAAA,EAAKY,MAAN,CACEX,QAAQA,GACJ,CACArF,QAASqF,EAAMA,MACfY,SAAU,SAId1C,KAAMkC,EACNnC,SAAU,EAAKA,SACfE,MAAOtC,EAAOuE,SAKtB,kBAACE,EAAA,EAAD,CACEN,OAAK,EACLQ,OAAO,qDACP7F,QAAQ,sEAEV,kBAACd,EAAA,EAAD,CAASS,OAAK,EAACuG,UAAQ,GACrB,kBAACxG,EAAA,EAAD,CACEM,QAAQ,kBACRuE,QAAQ,QACRpE,SAAO,OAMjB0F,OAAO,wBACPM,KAAMhF,EACNiF,QAASrH,KAAKsE,KACdjC,OAAQrC,KAAKqC,OACbiF,QACE,kBAAC3G,EAAA,EAAD,CACEM,QAAQ,kBACRuE,QAAQ,QACR+B,KAAK,OACL1G,QAASb,KAAKoC,KACdhB,SAAO,U,GAnMoBC,aCRjCC,EAAgB,CACpBgJ,WAAY,GACZ7I,QAAS,GACTC,MAAO,GACPC,KAAM,iBAGa6I,E,kDACnB,WAAYvK,GAAQ,IAAD,8BACjB,cAAMA,IAaRoC,OAAS,SAACC,EAAGC,GACX,EAAKC,YACL,EAAKC,aACL,EAAKC,aACL,EAAKC,UAlBY,EAoBnBH,UAAY,kBAAM,EAAKI,SAAS,CAC9Bd,aAASC,EACTC,aAASD,EACTE,OAAQ,GACRC,SAAKH,EACLI,OAAQa,OAAOC,OAAO,GAAI3B,EAAe,CACvCgJ,WAAY,EAAKrK,MAAMsF,OAAOf,UA1Bf,EA6BnB/B,WAAa,WAAO,IACH1C,EAAiB,EAAKE,MAA7BC,IAAOH,WACfA,EAAW8C,IAAIC,YAAY/C,EAAWU,aAAasC,MAAK,SAACjB,GACvD,EAAKc,SAAS,CACZd,UACAK,OAAQa,OAAOC,OAAO,GAAI,EAAKpB,MAAMM,OAAQ,CAC3CT,MAAO3B,EAAWU,oBAnCP,EAwCnBiC,WAAa,WAAO,IACH3C,EAAiB,EAAKE,MAA7BC,IAAOH,WACfA,EAAW8C,IAAIY,qBAAqB,YAAa1D,EAAWU,YAAa,OAAOsC,MAAK,SAACf,GAAD,OAAa,EAAKY,SAAS,CAAEZ,gBA1CjG,EA4CnBW,OAAS,WACkC,EAAK1C,MAAtCC,IAAOH,WAAc8C,IACzBa,eAAe,CACjBC,KAAM,UACNC,MAAO,UACPC,MAAO,UACPC,SAAU,OACVC,eAAgB,EAChBC,YAAa,qCACbC,YAAa,qCACbC,MAAO,IACNnB,MAAK,SAACoB,GACP,EAAKvB,SAAS,CACZV,IAAKiC,EAAQC,KAAK,GAClBjC,OAAQa,OAAOC,OAAO,GAAI,EAAKpB,MAAMM,OAAQ,CAC3CV,QAAS0C,EAAQC,KAAK,GAAGC,mBA3Dd,EAgEnBC,KAAO,kBAAM,EAAK1B,SAAS,CAAER,MAAM,KAhEhB,EAiEnBA,KAAO,kBAAM,EAAKQ,SAAS,CAAER,MAAM,KAjEhB,EAkEnBmC,SAAW,SAACjC,EAAD,OAAMkC,EAAN,EAAMA,KAAMC,EAAZ,EAAYA,MAAZ,OAAwB,EAAK7B,SAAS,CAC/CT,OAAQa,OAAOC,OAAO,GAAI,EAAKpB,MAAMM,OAA7Ba,OAAA,IAAAA,CAAA,GACLwB,EAAOC,OApEO,EAuEnBC,SAvEmB,sBAuER,oCAAAC,EAAA,6DACDxC,EAAW,EAAKN,MAAhBM,OACOpC,EAAiB,EAAKE,MAA7BC,IAAOH,WAFN,SAICU,EAAmCV,EAAnCU,YAAaC,EAAsBX,EAAtBW,kBACfkE,EAAK,CACTC,QAAS,CAAC,CACR/C,QAAS,cACT0C,KAAM,cACNM,cAAe,CAAC,CAAEpD,MAAOjB,EAAasE,WAAYrE,IAClD6B,KAAMJ,KAVH,SAaDpC,EAAWiF,gBAAgBJ,EAAI,CAAEK,cAAe,IAAKC,aAAc,IAblE,OAcP,EAAKjF,MAAMkF,YACX,EAAKb,OAfE,kDAiBP,EAAK1B,SAAS,CACZX,OAAQ,KAAEmD,MAAMC,KAAKlD,SAlBhB,0DArET,EAAKN,MAAQ,CACXC,aAASC,EACTC,aAASD,EACTE,OAAQ,GACRC,SAAKH,EACLI,OAAQa,OAAOC,OAAO,GAAI3B,EAAe,CACvCgJ,WAAY,EAAKrK,MAAMsF,OAAOf,OAEhCpC,MAAM,GAERyF,QAAQC,IAAI,EAAK7H,MAAMsF,OAAOf,MAZb,E,qDA6FT,IAAD,SAOHxE,KAAK6B,MALPG,EAFK,EAELA,QACAC,EAHK,EAGLA,OACAC,EAJK,EAILA,IACAC,EALK,EAKLA,OACAC,EANK,EAMLA,KAEF,OACE,kBAACsD,EAAA,EAAD,CACEC,WAAS,EACT1E,QACE,kBAACd,EAAA,EAAD,CACEyF,QAAM,EACNzE,KAAK,QACLJ,MAAO,CAAE8E,UAAW,IAEpB,kBAAC1F,EAAA,EAAD,CAASmF,MAAM,OAAOlF,WAAS,GAC7B,kBAAC0F,EAAA,EAAD,CAAO3E,KAAK,SACV,kBAAC2E,EAAA,EAAMC,IAAP,KACE,kBAACD,EAAA,EAAME,KAAP,4BAGA,kBAACF,EAAA,EAAME,KAAP,CAAYC,UAAU,SAClBjE,EAEE,gCAASA,EAAQ,IAGjB,kBAACkE,EAAA,EAAD,CAAM1B,KAAK,UAAU2B,SAAO,MAKpC,kBAACL,EAAA,EAAMC,IAAP,KACE,kBAACD,EAAA,EAAME,KAAP,iCAGA,kBAACF,EAAA,EAAME,KAAP,CAAYC,UAAU,SAClB/D,EAEE,iCAAUA,EAAImC,WAAa,KAAY+B,QAAQ,GAA/C,QAGA,kBAACF,EAAA,EAAD,CAAM1B,KAAK,UAAU2B,SAAO,QAOxC,kBAACE,EAAA,EAAD,CACEC,MAAOrE,EAAOsE,OACdC,SAAUxG,KAAK0E,UAEd1B,OAAOO,KAAKpB,GAAQsE,KAAI,SAACC,GAAW,IAAD,EAClBzE,EAAOkB,QAAO,SAACb,GAAD,OAAOA,EAAEkC,OAASkC,KAAzCJ,EAD2B,oBAElC,MAAc,SAAVI,GAEF,kBAACL,EAAA,EAAKM,MAAN,KACE,2BAAO5F,MAAO,CACZgG,cAAe,eAEdL,EAAMM,QAAQ,KAAM,MAEvB,kBAACX,EAAA,EAAKY,MAAN,CACEX,QAAQA,GACJ,CACArF,QAASqF,EAAMA,MACfY,SAAU,SAId1C,KAAMkC,EACNnC,SAAU,EAAKA,SACfE,MAAOtC,EAAOuE,SAKtB,kBAACE,EAAA,EAAD,CACEN,OAAK,EACLQ,OAAO,qDACP7F,QAAQ,sEAEV,kBAACd,EAAA,EAAD,CAASS,OAAK,EAACuG,UAAQ,GACrB,kBAACxG,EAAA,EAAD,CACEM,QAAQ,eACRuE,QAAQ,QACRpE,SAAO,OAMjB0F,OAAO,mBACPM,KAAMhF,EACNiF,QAASrH,KAAKsE,KACdjC,OAAQrC,KAAKqC,OACbiF,QACE,kBAAC3G,EAAA,EAAD,CACEC,OAAK,EACLK,QAAO,eACPJ,QAASb,KAAKoC,KACdhB,SAAO,EACPD,KAAK,gB,GAvMwBE,aCPnCC,EAAgB,CACpBgJ,WAAY,GACZG,UAAW,EACXhJ,QAAS,GACTC,MAAO,GACPC,KAAM,iBAGa+I,E,kDACnB,WAAYzK,GAAQ,IAAD,8BACjB,cAAMA,IAaRoC,OAAS,SAACC,EAAGC,GACX,EAAKC,YACL,EAAKC,aACL,EAAKC,aACL,EAAKC,UAlBY,EAoBnBH,UAAY,kBAAM,EAAKI,SAAS,CAC9Bd,aAASC,EACTC,aAASD,EACTE,OAAQ,GACRC,SAAKH,EACLI,OAAQa,OAAOC,OAAO,GAAI3B,EAAe,CACvCgJ,WAAY,EAAKrK,MAAMsF,OAAOf,KAC9BiG,UAAY,EAAKxK,MAAMsF,OAAOkF,UAAa,EAAI,OA3BhC,EA8BnBhI,WAAa,WAAO,IACH1C,EAAiB,EAAKE,MAA7BC,IAAOH,WACfA,EAAW8C,IAAIC,YAAY/C,EAAWU,aAAasC,MAAK,SAACjB,GACvD,EAAKc,SAAS,CACZd,UACAK,OAAQa,OAAOC,OAAO,GAAI,EAAKpB,MAAMM,OAAQ,CAC3CT,MAAO3B,EAAWU,oBApCP,EAyCnBiC,WAAa,WAAO,IACH3C,EAAiB,EAAKE,MAA7BC,IAAOH,WACfA,EAAW8C,IAAIY,qBAAqB,YAAa1D,EAAWU,YAAa,OAAOsC,MAAK,SAACf,GAAD,OAAa,EAAKY,SAAS,CAAEZ,gBA3CjG,EA6CnBW,OAAS,WACkC,EAAK1C,MAAtCC,IAAOH,WAAc8C,IACzBa,eAAe,CACjBC,KAAM,UACNC,MAAO,UACPC,MAAO,UACPC,SAAU,OACVC,eAAgB,EAChBC,YAAa,qCACbC,YAAa,qCACbC,MAAO,IACNnB,MAAK,SAACoB,GACP,EAAKvB,SAAS,CACZV,IAAKiC,EAAQC,KAAK,GAClBjC,OAAQa,OAAOC,OAAO,GAAI,EAAKpB,MAAMM,OAAQ,CAC3CV,QAAS0C,EAAQC,KAAK,GAAGC,mBA5Dd,EAiEnBC,KAAO,kBAAM,EAAK1B,SAAS,CAAER,MAAM,KAjEhB,EAkEnBA,KAAO,kBAAM,EAAKQ,SAAS,CAAER,MAAM,KAlEhB,EAmEnBmC,SAAW,SAACjC,EAAD,OAAMkC,EAAN,EAAMA,KAAMC,EAAZ,EAAYA,MAAZ,OAAwB,EAAK7B,SAAS,CAC/CT,OAAQa,OAAOC,OAAO,GAAI,EAAKpB,MAAMM,OAA7Ba,OAAA,IAAAA,CAAA,GACLwB,EAAOC,OArEO,EAwEnBC,SAxEmB,sBAwER,oCAAAC,EAAA,6DACDxC,EAAW,EAAKN,MAAhBM,OACOpC,EAAiB,EAAKE,MAA7BC,IAAOH,WAFN,SAICU,EAAmCV,EAAnCU,YAAaC,EAAsBX,EAAtBW,kBACfkE,EAAK,CACTC,QAAS,CAAC,CACR/C,QAAS,cACT0C,KAAM,eACNM,cAAe,CAAC,CAAEpD,MAAOjB,EAAasE,WAAYrE,IAClD6B,KAAMJ,KAVH,SAaDpC,EAAWiF,gBAAgBJ,EAAI,CAAEK,cAAe,IAAKC,aAAc,IAblE,OAcP,EAAKjF,MAAMkF,YACX,EAAKb,OAfE,kDAiBP,EAAK1B,SAAS,CACZX,OAAQ,KAAEmD,MAAMC,KAAKlD,SAlBhB,0DAtET,EAAKN,MAAQ,CACXC,aAASC,EACTC,aAASD,EACTE,OAAQ,GACRC,SAAKH,EACLI,OAAQa,OAAOC,OAAO,GAAI3B,EAAe,CACvCgJ,WAAY,EAAKrK,MAAMsF,OAAOf,KAC9BiG,UAAY,EAAKxK,MAAMsF,OAAOkF,UAAa,EAAI,IAEjDrI,MAAM,GAXS,E,qDA8FT,IAAD,SAOHpC,KAAK6B,MALPG,EAFK,EAELA,QACAC,EAHK,EAGLA,OACAC,EAJK,EAILA,IACAC,EALK,EAKLA,OACAC,EANK,EAMLA,KAEF,OACE,kBAACsD,EAAA,EAAD,CACEC,WAAS,EACT1E,QACE,kBAACd,EAAA,EAAD,CACEyF,QAAM,EACNzE,KAAK,QACLJ,MAAO,CAAE8E,UAAW,IAEpB,kBAAC1F,EAAA,EAAD,CAASmF,MAAM,OAAOlF,WAAS,GAC7B,kBAAC0F,EAAA,EAAD,CAAO3E,KAAK,SACV,kBAAC2E,EAAA,EAAMC,IAAP,KACE,kBAACD,EAAA,EAAME,KAAP,4BAGA,kBAACF,EAAA,EAAME,KAAP,CAAYC,UAAU,SAClBjE,EAEE,gCAASA,EAAQ,IAGjB,kBAACkE,EAAA,EAAD,CAAM1B,KAAK,UAAU2B,SAAO,MAKpC,kBAACL,EAAA,EAAMC,IAAP,KACE,kBAACD,EAAA,EAAME,KAAP,kCAGA,kBAACF,EAAA,EAAME,KAAP,CAAYC,UAAU,SAClB/D,EAEE,iCAAUA,EAAImC,WAAa,KAAY+B,QAAQ,GAA/C,QAGA,kBAACF,EAAA,EAAD,CAAM1B,KAAK,UAAU2B,SAAO,QAOxC,kBAACE,EAAA,EAAD,CACEC,MAAOrE,EAAOsE,OACdC,SAAUxG,KAAK0E,UAEd1B,OAAOO,KAAKpB,GAAQsE,KAAI,SAACC,GAAW,IAAD,EAClBzE,EAAOkB,QAAO,SAACb,GAAD,OAAOA,EAAEkC,OAASkC,KAAzCJ,EAD2B,oBAElC,MAAc,SAAVI,GAEF,kBAACL,EAAA,EAAKM,MAAN,KACE,2BAAO5F,MAAO,CACZgG,cAAe,eAEdL,EAAMM,QAAQ,KAAM,MAEvB,kBAACX,EAAA,EAAKY,MAAN,CACEX,QAAQA,GACJ,CACArF,QAASqF,EAAMA,MACfY,SAAU,SAId1C,KAAMkC,EACNnC,SAAU,EAAKA,SACfE,MAAOtC,EAAOuE,SAKtB,kBAACE,EAAA,EAAD,CACEN,OAAK,EACLQ,OAAO,qDACP7F,QAAQ,sEAEV,kBAACd,EAAA,EAAD,CAASS,OAAK,EAACuG,UAAQ,GACrB,kBAACxG,EAAA,EAAD,CACEM,QAAUjB,KAAKC,MAAMsF,OAAOkF,UAAa,eAAiB,cAC1DjF,QAAQ,QACRpE,SAAO,OAMjB0F,OAAO,wBACPM,KAAMhF,EACNiF,QAASrH,KAAKsE,KACdjC,OAAQrC,KAAKqC,OACbiF,QACE,kBAAC3G,EAAA,EAAD,CACEC,OAAK,EACLK,QAAUjB,KAAKC,MAAMsF,OAAOkF,UAAnB,6BACT5J,QAASb,KAAKoC,KACdhB,SAAO,EACPD,KAAK,gB,GAxMyBE,aCRpCC,EAAgB,CACpBiH,UAAU,EACV+B,WAAY,GACZ9B,yBAA0B,GAC1B/G,QAAS,GACTC,MAAO,GACPC,KAAM,iBAGagJ,E,4MACnB9I,MAAQ,CACNC,aAASC,EACTC,aAASD,EACTwG,UAAU,EACVtG,OAAQ,GACRC,SAAKH,EACLI,OAAQb,EACRc,MAAM,G,EAERC,OAAS,SAACC,EAAGC,GACX,EAAKC,YACL,EAAKC,aACL,EAAKC,aACL,EAAKC,U,EAEPH,UAAY,kBAAM,EAAKI,SAAS,CAC9Bd,aAASC,EACTC,aAASD,EACTE,OAAQ,GACRC,SAAKH,EACLI,OAAQa,OAAOC,OAAO,GAAI3B,EAAe,CACvCgJ,WAAY,EAAKrK,MAAMsF,OAAOf,U,EAGlC/B,WAAa,WAAO,IACH1C,EAAiB,EAAKE,MAA7BC,IAAOH,WACfA,EAAW8C,IAAIC,YAAY/C,EAAWU,aAAasC,MAAK,SAACjB,GACvD,EAAKc,SAAS,CACZd,UACAK,OAAQa,OAAOC,OAAO,GAAI,EAAKpB,MAAMM,OAAQ,CAC3CT,MAAO3B,EAAWU,oB,EAK1BiC,WAAa,WAAO,IACH3C,EAAiB,EAAKE,MAA7BC,IAAOH,WACfA,EAAW8C,IAAIY,qBAAqB,YAAa1D,EAAWU,YAAa,OAAOsC,MAAK,SAACf,GAAD,OAAa,EAAKY,SAAS,CAAEZ,gB,EAEpHW,OAAS,WACkC,EAAK1C,MAAtCC,IAAOH,WAAc8C,IACzBa,eAAe,CACjBC,KAAM,UACNC,MAAO,UACPC,MAAO,UACPC,SAAU,OACVC,eAAgB,EAChBC,YAAa,qCACbC,YAAa,qCACbC,MAAO,IACNnB,MAAK,SAACoB,GACHA,EAAQC,KAAKmC,OACf,EAAK3D,SAAS,CACZ2F,UAAU,EACVrG,IAAKiC,EAAQC,KAAK,GAClBjC,OAAQa,OAAOC,OAAO,GAAI,EAAKpB,MAAMM,OAAQ,CAC3CV,QAAS0C,EAAQC,KAAK,GAAGC,eAI7B,EAAKzB,SAAS,CACZ2F,UAAU,Q,EAKlBjE,KAAO,kBAAM,EAAK1B,SAAS,CAAER,MAAM,K,EACnCA,KAAO,kBAAM,EAAKQ,SAAS,CAAER,MAAM,K,EACnCmC,SAAW,SAACjC,EAAD,OAAMkC,EAAN,EAAMA,KAAMC,EAAZ,EAAYA,MAAZ,OAAwB,EAAK7B,SAAS,CAC/CT,OAAQa,OAAOC,OAAO,GAAI,EAAKpB,MAAMM,OAA7Ba,OAAA,IAAAA,CAAA,GACLwB,EAAOC,O,EAGZC,S,sBAAW,oCAAAC,EAAA,6DACDxC,EAAW,EAAKN,MAAhBM,OACOpC,EAAiB,EAAKE,MAA7BC,IAAOH,WAFN,SAICU,EAAmCV,EAAnCU,YAAaC,EAAsBX,EAAtBW,kBACfkE,EAAK,CACTC,QAAS,CAAC,CACR/C,QAAS,cACT0C,KAAM,aACNM,cAAe,CAAC,CAAEpD,MAAOjB,EAAasE,WAAYrE,IAClD6B,KAAMJ,KAVH,SAaDpC,EAAWiF,gBAAgBJ,EAAI,CAAEK,cAAe,IAAKC,aAAc,IAblE,OAcP,EAAKjF,MAAMkF,YACX,EAAKb,OAfE,kDAiBPuD,QAAQC,IAAR,MAEA,EAAKlF,SAAS,CACZX,OAAQ,KAAEmD,MAAMC,KAAKlD,SApBhB,0D,uDAwBD,IAAD,SAQHnC,KAAK6B,MANPG,EAFK,EAELA,QACAuG,EAHK,EAGLA,SACAtG,EAJK,EAILA,OACAC,EALK,EAKLA,IACAC,EANK,EAMLA,OACAC,EAPK,EAOLA,KAEF,OAAImG,EAEA,kBAAC7C,EAAA,EAAD,CACEC,WAAS,EACT1E,QACE,kBAACd,EAAA,EAAD,CACEyF,QAAM,EACNzE,KAAK,QACLJ,MAAO,CAAE8E,UAAW,IAHtB,8BAQFiB,OAAO,wBACPM,KAAMhF,EACNiF,QAASrH,KAAKsE,KACdjC,OAAQrC,KAAKqC,OACbiF,QACE,kBAAC3G,EAAA,EAAD,CACEC,OAAK,EACLK,QAAO,kBACPJ,QAASb,KAAKoC,KACdhB,SAAO,EACPD,KAAK,YAOb,kBAACuE,EAAA,EAAD,CACEC,WAAS,EACT1E,QACE,kBAACd,EAAA,EAAD,CACEyF,QAAM,EACNzE,KAAK,QACLJ,MAAO,CAAE8E,UAAW,IAEpB,kBAAC1F,EAAA,EAAD,CAASmF,MAAM,OAAOlF,WAAS,GAC7B,kBAAC0F,EAAA,EAAD,CAAO3E,KAAK,SACV,kBAAC2E,EAAA,EAAMC,IAAP,KACE,kBAACD,EAAA,EAAME,KAAP,4BAGA,kBAACF,EAAA,EAAME,KAAP,CAAYC,UAAU,SAClBjE,EAEE,gCAASA,EAAQ,IAGjB,kBAACkE,EAAA,EAAD,CAAM1B,KAAK,UAAU2B,SAAO,MAKpC,kBAACL,EAAA,EAAMC,IAAP,KACE,kBAACD,EAAA,EAAME,KAAP,4BAGA,kBAACF,EAAA,EAAME,KAAP,CAAYC,UAAU,SAClB/D,EAEE,iCAAUA,EAAImC,WAAa,KAAY+B,QAAQ,GAA/C,QAGA,kBAACF,EAAA,EAAD,CAAM1B,KAAK,UAAU2B,SAAO,QAOxC,kBAACE,EAAA,EAAD,CACEC,MAAOrE,EAAOsE,OACdC,SAAUxG,KAAK0E,UAEd1B,OAAOO,KAAKpB,GAAQgB,QAAO,SAAAuF,GAAC,MAAU,aAANA,KAAkBjC,KAAI,SAACC,GAAW,IAAD,EAChDzE,EAAOkB,QAAO,SAACb,GAAD,OAAOA,EAAEkC,OAASkC,KAAzCJ,EADyD,oBAEhE,MAAc,SAAVI,GAEF,kBAACL,EAAA,EAAKM,MAAN,KACE,2BAAO5F,MAAO,CACZgG,cAAe,eAEdL,EAAMM,QAAQ,KAAM,MAEvB,kBAACX,EAAA,EAAKY,MAAN,CACEX,QAAQA,GACJ,CACArF,QAASqF,EAAMA,MACfY,SAAU,SAId1C,KAAMkC,EACNnC,SAAU,EAAKA,SACfE,MAAOtC,EAAOuE,SAKtB,kBAACE,EAAA,EAAD,CACEN,OAAK,EACLQ,OAAO,qDACP7F,QAAQ,sEAEV,kBAACd,EAAA,EAAD,CAASS,OAAK,EAACuG,UAAQ,GACrB,kBAACxG,EAAA,EAAD,CACEM,QAAQ,kBACRuE,QAAQ,QACRpE,SAAO,OAMjB0F,OAAO,wBACPM,KAAMhF,EACNiF,QAASrH,KAAKsE,KACdjC,OAAQrC,KAAKqC,OACbiF,QACE,kBAAC3G,EAAA,EAAD,CACEC,OAAK,EACLK,QAAO,kBACPJ,QAASb,KAAKoC,KACdhB,SAAO,EACPD,KAAK,gB,GAzO2BE,aCHvBuJ,E,4MACnB/I,MAAQ,CACN+G,UAAW,GACXiC,QAAS,GACTrJ,qBAAsB,I,EAQxBqH,KAAO,WAAO,IACG9I,EAAiB,EAAKE,MAA7BC,IAAOH,WACf,EAAK+K,WAAW/K,EAAWU,c,EAE7B0E,UAAY,WACV,EAAK0D,Q,EAEPiC,WAAa,SAACrK,GAAiB,IACAoC,EAAY,EAAK5C,MAAtCC,IAAOH,WAAc8C,IAC7BA,EAAIa,eAAe,CACjBC,KAAM,cACNC,MAAO,UACPC,MAAO,cACPC,SAAU,OACVC,eAAgB,EAChBC,YAAavD,EACbwD,YAAaxD,EACbyD,MAAO,KACNnB,MAAK,SAACoB,GACP,EAAKvB,SAAS,CACZiI,QAAS1G,EAAQC,OAEfD,EAAQC,KAAKmC,QACfpC,EAAQC,KAAKqC,IAAI,EAAKqC,iBAG1BjG,EAAIC,YAAYrC,GAAasC,MAAK,SAACjB,GACjC,EAAKc,SAAS,CACZpB,qBAAsBM,EAAQoB,YAAYC,QAAO,SAACC,GAAD,MAAuB,UAAhBA,EAAEC,aAAuB,GAAGC,cAAcC,KAAK,GAAGC,U,EAIhHsF,aAAe,SAACvD,GAC2B,EAAKtF,MAAtCC,IAAOH,WAAc8C,IACzBa,eAAe,CACjBC,KAAM,cACNC,MAAO,WACPC,MAAO,cACPC,SAAU,OACVC,eAAgB,EAChBC,YAAauB,EAAOwF,WACpB9G,YAAasB,EAAOwF,WACpB7G,MAAO,KACNnB,MAAK,SAACoB,GACP,EAAKvB,SAAS,CACZgG,UAAWoC,iBAAO,GAAD,mBAAK,EAAKnJ,MAAM+G,WAAhB,YAA8BzE,EAAQC,OAAO,Y,kEAlDlCpE,KAAKC,MAA7BC,IAAOH,YAEbC,KAAK6I,S,+BAoDC,IAAD,SAIH7I,KAAK6B,MAFP+G,EAFK,EAELA,UACAiC,EAHK,EAGLA,QAEF,OACE,kBAAC1B,EAAA,EAAD,CAAWC,OAAK,GACd,kBAACjJ,EAAA,EAAD,CACEkJ,SAAS,MACTlC,UAAQ,EACR/G,WAAS,GAET,kBAACE,EAAA,EAAD,CACEkF,QAAQ,OACRrE,KAAK,SAFP,cAKE,kBAACb,EAAA,EAAOE,UAAR,kEAIF,kBAACG,EAAA,EAAD,CACEM,QAAQ,eACRuE,QAAQ,QACR+B,KAAK,UACL1G,QAASb,KAAK6I,OAEhB,kBAAC,EAAD,CACE1D,UAAWnF,KAAKmF,UAChBjF,IAAKF,KAAKC,MAAMC,MAElB,uBAAGoJ,MAAM,+BAA+BC,KAAO,4DAA8DvJ,KAAK6B,MAAML,sBAAuB,uBAAGgI,cAAY,OAAOF,MAAM,gBAA3K,oBAECuB,EAAQtE,QAEP,kBAACpG,EAAA,EAAD,CACEkJ,SAAS,SACTlI,KAAK,QACL8E,UAAU,UAEV,kBAAC3F,EAAA,EAAD,+EAOJuK,EAAQtE,QAEN,kBAACT,EAAA,EAAD,CACEuD,SAAS,SACTzD,QAAM,EACN6D,SAAO,GAEP,kBAAC3D,EAAA,EAAMxF,OAAP,KACE,kBAACwF,EAAA,EAAMC,IAAP,KACE,kBAACD,EAAA,EAAM4D,WAAP,oBAGA,kBAAC5D,EAAA,EAAM4D,WAAP,oBAKJ,kBAAC5D,EAAA,EAAM6D,KAAP,KACGkB,EAAQpE,KAAI,SAAClB,GACZ,IAAM0F,EAAWrC,EAAUzF,QAAO,SAACwB,GAAD,OAAOA,EAAEY,SAAWA,EAAOf,QAC7D,OACE,kBAACsB,EAAA,EAAMC,IAAP,KACE,kBAACD,EAAA,EAAME,KAAP,CAAY4D,YAAU,EAACC,cAAc,OACnC,kBAACvJ,EAAA,EAAD,SACIiF,EAAOf,MAEX,kBAACsB,EAAA,EAAD,CAAOgE,YAAU,GACf,kBAAChE,EAAA,EAAM6D,KAAP,KACE,kBAAC7D,EAAA,EAAMC,IAAP,KACE,kBAACD,EAAA,EAAME,KAAP,KAAcT,EAAOkF,UAAa,SAAW,WAC7C,kBAAC3E,EAAA,EAAME,KAAP,KACE,kBAAC,EAAD,CACET,OAAQA,EACRJ,UAAW,EAAKA,UAChBjF,IAAK,EAAKD,MAAMC,QAItB,kBAAC4F,EAAA,EAAMC,IAAP,KACE,kBAACD,EAAA,EAAME,KAAP,gBACA,kBAACF,EAAA,EAAME,KAAP,KAAc,IAAIgE,KAAyB,IAApBzE,EAAO0E,YAAoBC,gBAEpD,kBAACpE,EAAA,EAAMC,IAAP,KACE,kBAACD,EAAA,EAAME,KAAP,cACA,kBAACF,EAAA,EAAME,KAAP,KACE,kBAAC,EAAD,CACET,OAAQA,EACRJ,UAAW,EAAKA,UAChBjF,IAAK,EAAKD,MAAMC,QAItB,kBAAC4F,EAAA,EAAMC,IAAP,KACE,kBAACD,EAAA,EAAME,KAAP,iBACA,kBAACF,EAAA,EAAME,KAAP,KACE,kBAAC,EAAD,CACET,OAAQA,EACRJ,UAAW,EAAKA,UAChBjF,IAAK,EAAKD,MAAMC,WAO5B,kBAAC4F,EAAA,EAAME,KAAP,CAAYC,UAAU,SAClBgF,EAAS1E,OAEP,kBAACT,EAAA,EAAD,CAAOgE,YAAU,GACf,kBAAChE,EAAA,EAAM6D,KAAP,KACGsB,EAASxE,KAAI,SAACkB,GAAD,OACZ,kBAAC7B,EAAA,EAAMC,IAAP,KACE,kBAACD,EAAA,EAAME,KAAP,KAAa2B,EAAQnD,MACrB,kBAACsB,EAAA,EAAME,KAAP,KACG2B,EAAQiB,UAAU,GAAGyB,eACtB,6BAFF,YAGa,IAAIL,KAA0B,IAArBrC,EAAQsC,YAAoBiB,4BAQ1D,kBAAC/K,EAAA,EAAD,CAAS8F,UAAU,QACjB,kBAAC3F,EAAA,EAAD,CAAQa,KAAK,SAAb,0BAEE,kBAACb,EAAA,EAAOE,UAAR,2EAOR,kBAAC,EAAD,CACE+E,OAAQA,EACRJ,UAAW,EAAKA,UAChBjF,IAAK,EAAKD,MAAMC,kB,GA7MLmB,aCHhB8J,E,uKACT,IACAjL,EAAQF,KAAKC,MAAbC,IACAkL,EAAWlL,EAAXkL,OACFC,EAAQ,CACZ,CAAEC,SAAU,qBAAsBC,OAAQ,kBAAM,kBAACC,EAAA,EAAIC,KAAL,KAAU,kBAAC,EAAD,CAAWvL,IAAKA,OAC1E,CAAEoL,SAAU,oBAAqBC,OAAQ,kBAAM,kBAACC,EAAA,EAAIC,KAAL,KAAU,kBAAC,EAAD,CAASvL,IAAKA,QAGzE,OACE,kBAACiJ,EAAA,EAAD,CAAWpI,MAAO,CAChB2K,OAAQ,UAER,kBAACC,EAAA,EAAD,CAAMC,SAAO,GACX,kBAACD,EAAA,EAAK5F,IAAN,KACE,kBAAC4F,EAAA,EAAKE,OAAN,CAAaC,MAAO,IAClB,kBAACxL,EAAA,EAAD,CAAQa,KAAK,SAAb,0BAEE,kBAACb,EAAA,EAAOE,UAAR,iEAKJ,kBAACmL,EAAA,EAAKE,OAAN,CAAaC,MAAO,EAAG7F,UAAU,SAC/B,kBAAC,EAAD,CAAS/F,IAAKA,MAGM,qEAAtBkL,EAAO,GAAGW,QAER,kBAACJ,EAAA,EAAK5F,IAAN,CAAUiG,QAAS,GACjB,kBAACL,EAAA,EAAKE,OAAN,KACE,kBAACjF,EAAA,EAAD,CACE3F,QAAO,kEAA6DmK,EAAO,GAAGW,QAAvE,MACPjF,OAAO,eACPS,KAAK,eACLpG,KAAK,QACL8K,SAAO,MAMb,kBAACN,EAAA,EAAK5F,IAAN,CAAUiG,QAAS,GACjB,kBAACL,EAAA,EAAKE,OAAN,KACE,kBAACjF,EAAA,EAAD,CACE3F,QAAO,6EAAwEmK,EAAO,GAAGW,QAAlF,MACPjF,OAAO,cACPS,KAAK,cACLV,MAAI,EACJ1F,KAAK,YAMf,kBAACwK,EAAA,EAAK5F,IAAN,CAAUiG,QAAS,GACjB,kBAACL,EAAA,EAAKE,OAAN,KACI3L,EAAIH,WAEF,kBAACyL,EAAA,EAAD,CACEU,KAAM,CACJ7C,SAAU,MACV9B,KAAM,OACNpG,KAAM,OACNgL,SAAS,GAEXd,MAAOA,IAIT,kBAAClL,EAAA,EAAD,CAASgB,KAAK,QAAQd,SAAO,EAAC4F,UAAU,UACtC,4FACA,kBAAC,EAAD,CAAS/F,IAAKA,a,GAxEAmB,aCJ5B+K,EAAU,CACdL,QAAS,mEACTvH,KAAM,MACN6H,aAAc,CAAC,CACbC,SAAU,QACVC,KAAM,mBACNC,KAAM,OAIJC,GAAU,CACdV,QAAS,mEACTvH,KAAM,cACN6H,aAAc,CAAC,CACbC,SAAU,QACVC,KAAM,0BACNC,KAAM,OAIJE,G,uKAEF,IAAIC,EAAQP,EACmB,aAA3BQ,OAAOC,SAASzE,SAClBuE,EAAQF,IAEV,IAAMK,EAAS,IAAIC,SAAO,CAACJ,GAAQ,CAAEK,QAAS,iBACxCC,EAAU,IAAIC,UAAQ,CAACP,GAAQ,CAAEK,QAAS,iBAChD,OACE,kBAAC,cAAD,CACEA,QAAQ,mBACRG,eAAgB,CAACL,EAAQG,GACzB7B,OAAQ,CAACuB,IAET,kBAACS,GAAD,MACA,kBAACjN,EAAA,EAAD,CAASS,OAAK,EAACqF,UAAU,UACH,qEAAlB0G,EAAMZ,QAEJ,uBAAGxC,KAAK,iBAAR,6BAGA,uBAAGA,KAAK,yBAAR,mC,GArBWlI,aA8BnB+L,GAAkBC,kBAAQlC,GAMjBmC,GAJH,kBACV,kBAAC,GAAD,OCnDIC,GAAcC,QACW,cAA7BZ,OAAOC,SAASY,UAEe,UAA7Bb,OAAOC,SAASY,UAEhBb,OAAOC,SAASY,SAASC,MACvB,2DAsCN,SAASC,GAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACT7K,MAAK,SAAAkL,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBtM,QACfiM,UAAUC,cAAcO,YAI1BzG,QAAQC,IACN,iHAKE+F,GAAUA,EAAOU,UACnBV,EAAOU,SAASN,KAMlBpG,QAAQC,IAAI,sCAGR+F,GAAUA,EAAO1I,WACnB0I,EAAO1I,UAAU8I,WAO5BO,OAAM,SAAAlI,GACLuB,QAAQvB,MAAM,4CAA6CA,M,OCtFjEmI,IAASlD,OACP,kBAAC,IAAMmD,WAAP,KACE,kBAAC,GAAD,OAEFC,SAASC,eAAe,SDQnB,SAAkBf,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAIe,IAAIC,gBAAwBlC,OAAOC,SAAStD,MACpDwF,SAAWnC,OAAOC,SAASkC,OAIvC,OAGFnC,OAAOoC,iBAAiB,QAAQ,WAC9B,IAAMpB,EAAK,UAAMkB,gBAAN,sBAEPvB,KAgEV,SAAiCK,EAAOC,GAEtCoB,MAAMrB,EAAO,CACXsB,QAAS,CAAE,iBAAkB,YAE5BnM,MAAK,SAAAoM,GAEJ,IAAMC,EAAcD,EAASD,QAAQG,IAAI,gBAEnB,MAApBF,EAASG,QACO,MAAfF,IAA8D,IAAvCA,EAAYG,QAAQ,cAG5CzB,UAAUC,cAAcyB,MAAMzM,MAAK,SAAAkL,GACjCA,EAAawB,aAAa1M,MAAK,WAC7B6J,OAAOC,SAAS6C,eAKpB/B,GAAgBC,EAAOC,MAG1BW,OAAM,WACL3G,QAAQC,IACN,oEAvFA6H,CAAwB/B,EAAOC,GAI/BC,UAAUC,cAAcyB,MAAMzM,MAAK,WACjC8E,QAAQC,IACN,iHAMJ6F,GAAgBC,EAAOC,OCjC/BE,K","file":"static/js/main.cb3020c0.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport {\n  Button,\n  Header,\n  Segment,\n} from 'semantic-ui-react';\n\nexport default class Account extends Component {\n  render() {\n    const { ual: { activeUser } } = this.props;\n    if (activeUser) {\n      return (\n        <Segment secondary stacked>\n          <Header>\n            <Header.Content>\n              <Header.Subheader>\n                Current Account\n              </Header.Subheader>\n              <span>{activeUser.accountName}@{activeUser.requestPermission}</span>\n            </Header.Content>\n            <Button\n              basic\n              onClick={this.props.ual.logout}\n              style={{ marginLeft: '1em' }}\n            >\n              Sign out\n            </Button>\n          </Header>\n        </Segment>\n      )\n    }\n    return (\n      <Button\n        content=\"Sign in\"\n        onClick={this.props.ual.showModal}\n        size=\"large\"\n        primary\n      />\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport {\n  Button,\n  Form,\n  Icon,\n  Message,\n  Modal,\n  Segment,\n  Table,\n} from 'semantic-ui-react';\n\nconst defaultFields = {\n  fio_address: '',\n  owner_fio_public_key: '',\n  max_fee: '',\n  actor: '',\n  tpid: 'tpid@greymass',\n}\n\nexport default class NewAddress extends Component {\n  state = {\n    account: undefined,\n    balance: undefined,\n    errors: [],\n    fee: undefined,\n    fields: defaultFields,\n    show: false,\n  }\n  onOpen = (e, data) => {\n    this.resetData();\n    this.getAccount();\n    this.getBalance();\n    this.getFee();\n  }\n  resetData = () => this.setState({\n    account: undefined,\n    balance: undefined,\n    errors: [],\n    fee: undefined,\n    fields: defaultFields,\n  })\n  getAccount = () => {\n    const { ual: { activeUser } } = this.props;\n    activeUser.rpc.get_account(activeUser.accountName).then((account) => {\n      this.setState({\n        account,\n        fields: Object.assign({}, this.state.fields, {\n          actor: activeUser.accountName,\n          owner_fio_public_key: account.permissions.filter((p) => p.perm_name === 'owner')[0].required_auth.keys[0].key\n        })\n      })\n    });\n  }\n  getBalance = () => {\n    const { ual: { activeUser } } = this.props;\n    activeUser.rpc.get_currency_balance('fio.token', activeUser.accountName, 'fio').then((balance) => this.setState({ balance }));\n  }\n  getFee = () => {\n    const { ual: { activeUser: { rpc } } } = this.props;\n    rpc.get_table_rows({\n      code: 'fio.fee',\n      table: 'fiofees',\n      scope: 'fio.fee',\n      key_type: 'i128',\n      index_position: 2,\n      lower_bound: '0x1a5f09714542254caaab363d520adfbd',\n      upper_bound: '0x1a5f09714542254caaab363d520adfbd',\n      limit: 1,\n    }).then((results) => {\n      this.setState({\n        fee: results.rows[0],\n        fields: Object.assign({}, this.state.fields, {\n          max_fee: results.rows[0].suf_amount\n        })\n      });\n    })\n  }\n  hide = () => this.setState({ show: false })\n  show = () => this.setState({ show: true })\n  onChange = (e, { name, value }) => this.setState({\n    fields: Object.assign({}, this.state.fields, {\n      [name]: value\n    })\n  })\n  transact = async () => {\n    const { fields } = this.state;\n    const { ual: { activeUser } } = this.props\n    try {\n      const { accountName, requestPermission } = activeUser\n      const tx = {\n        actions: [{\n          account: 'fio.address',\n          name: 'regaddress',\n          authorization: [{ actor: accountName, permission: requestPermission }],\n          data: fields,\n        }],\n      }\n      await activeUser.signTransaction(tx, { expireSeconds: 120, blocksBehind: 3 })\n      this.props.onSuccess();\n      this.hide();\n    } catch (e) {\n      this.setState({\n        errors: e.cause.json.fields\n      })\n    }\n  }\n  render() {\n    const {\n      basic,\n      color,\n      domain,\n      floated,\n    } = this.props;\n    const {\n      balance,\n      errors,\n      fee,\n      fields,\n      show,\n    } = this.state;\n    let triggerContent = \"Create FIO Address\"\n    if (domain) {\n      triggerContent = `Create FIO Address (address@${domain.name})`\n    }\n\n    return (\n      <Modal\n        closeIcon\n        content={(\n          <Segment\n            padded\n            size=\"large\"\n            style={{ marginTop: 0 }}\n          >\n            <Segment color=\"blue\" secondary>\n              <Table size=\"large\">\n                <Table.Row>\n                  <Table.Cell>\n                    Current FIO Balance\n                  </Table.Cell>\n                  <Table.Cell textAlign=\"right\">\n                    {(balance)\n                      ? (\n                        <strong>{balance[0]}</strong>\n                      )\n                      : (\n                        <Icon name=\"spinner\" loading />\n                      )\n                    }\n                  </Table.Cell>\n                </Table.Row>\n                <Table.Row>\n                  <Table.Cell>\n                    Address Registration Fee\n                  </Table.Cell>\n                  <Table.Cell textAlign=\"right\">\n                    {(fee)\n                      ? (\n                        <strong>{(fee.suf_amount / 1000000000).toFixed(9)} FIO</strong>\n                      )\n                      : (\n                        <Icon name=\"spinner\" loading />\n                      )\n                    }\n                  </Table.Cell>\n                </Table.Row>\n              </Table>\n            </Segment>\n            <Form\n              error={errors.length}\n              onSubmit={this.transact}\n            >\n              {Object.keys(fields).map((field) => {\n                const [error] = errors.filter((e) => e.name === field)\n                if (field === 'tpid') return false\n                return (\n                  <Form.Field>\n                    {(field === 'fio_address')\n                      ? (\n                        <Message\n                          info\n                          header=\"FIO Addresses\"\n                          content={`Enter the desired FIO Address including both the name and the domain, separated by the @ symbol (e.g. \"name@${(domain) ? domain.name : 'domain'}\").`}\n                        />\n                      )\n                      : false\n                    }\n                    <label style={{\n                      textTransform: 'capitalize',\n                    }}>\n                      {field.replace(/_/g, ' ')}\n                    </label>\n                    <Form.Input\n                      error={(error)\n                        ? {\n                          content: error.error,\n                          pointing: 'above',\n                        }\n                        : false\n                      }\n                      name={field}\n                      onChange={this.onChange}\n                      value={fields[field]}\n                    />\n                  </Form.Field>\n                );\n              })}\n              <Message\n                error\n                header='An error occurred while submitting the transaction'\n                content='Check the red fields above to correct the problems and try again.'\n              />\n              <Segment basic clearing>\n                <Button\n                  content=\"Register Address\"\n                  floated=\"right\"\n                  primary\n                />\n              </Segment>\n            </Form>\n          </Segment>\n        )}\n        header=\"Register a FIO Address\"\n        open={show}\n        onClose={this.hide}\n        onOpen={this.onOpen}\n        trigger={(\n          <Button\n            basic={(basic !== undefined) ? basic : true}\n            color={color}\n            content={triggerContent}\n            floated={floated}\n            icon=\"plus\"\n            onClick={this.show}\n            primary\n          />\n        )}\n      />\n    )\n  }\n}\n","const symbols = [\"BTC\",\"ETH\",\"EOS\",\"$DAG\",\"8BIT\",\"ABA\",\"ABBC\",\"ABT\",\"AC\",\"ACA\",\"ACC\",\"ACM\",\"ACT\",\"ADA\",\"ADF\",\"ADS\",\"AE\",\"AEON\",\"AERGO\",\"AETH\",\"AG\",\"AGM\",\"AIB\",\"AILE\",\"AIN\",\"AION\",\"AIOZ\",\"AKA\",\"ALGO\",\"ALIAS\",\"AMA\",\"AMO\",\"AMS\",\"ANDES\",\"ANK\",\"ANON\",\"AOA\",\"AQUA\",\"AR\",\"ARA\",\"ARDR\",\"AREPA\",\"ARG\",\"ARK\",\"ARW\",\"ASF\",\"ASK\",\"ATC\",\"ATH\",\"ATN\",\"ATOM\",\"ATP\",\"ATS\",\"AUDAX\",\"AUR\",\"AUX\",\"AXE\",\"AYA\",\"BALLZ\",\"BANANO\",\"BAND\",\"BARE\",\"BBC\",\"BC\",\"BCA\",\"BCC\",\"BCD\",\"BCH\",\"BCHA\",\"BCN\",\"BCO\",\"BCS\",\"BCX\",\"BCZ\",\"BDX\",\"BEAM\",\"BEET\",\"BELA\",\"BELL\",\"BHD\",\"BHP\",\"BHT\",\"BIFI\",\"BIGUP\",\"BIND\",\"BIO\",\"BIP\",\"BIQ\",\"BIS\",\"BITB\",\"BITC\",\"BITG\",\"BKT\",\"BLAST\",\"BLK\",\"BLOCK\",\"BMV\",\"BNB\",\"BND\",\"BNT\",\"BOLD\",\"BOLI\",\"BONO\",\"BOPO\",\"BOXY\",\"BPA\",\"BPS\",\"BR\",\"BRAVO\",\"BRIT\",\"BRK\",\"BSC\",\"BSD\",\"BSQ\",\"BST\",\"BSV\",\"BTA\",\"BTC2\",\"BTC2X\",\"BTCC\",\"BTCD\",\"BTCP\",\"BTCR\",\"BTCS\",\"BTCV\",\"BTCZ\",\"BTDX\",\"BTF\",\"BTG\",\"BTH\",\"BTM\",\"BTN\",\"BTP\",\"BTQ\",\"BTR\",\"BTS\",\"BTT\",\"BTV\",\"BTW\",\"BTX\",\"BTY\",\"BU\",\"BURST\",\"BUZZ\",\"BYND\",\"BYTZ\",\"BZX\",\"CCA\",\"CCC\",\"CCN\",\"CCX\",\"CCXX\",\"CDN\",\"CDY\",\"CENNZ\",\"CET\",\"CFX\",\"cGLD\",\"CHC\",\"CHI\",\"CHX\",\"CICO\",\"CITY\",\"CKB\",\"CLAM\",\"CLC\",\"CLO\",\"CLR\",\"CLUB\",\"CLX\",\"CMM\",\"CMP\",\"CMT\",\"CNMC\",\"COCOS\",\"COIN\",\"COINEVO\",\"COLX\",\"COS\",\"CPC\",\"CPS\",\"CPU\",\"CRAVE\",\"CRO\",\"CRP\",\"CRUZ\",\"CRW\",\"CRX\",\"CS\",\"CSC\",\"CSDT\",\"CTC\",\"CYB\",\"CZR\",\"DAPS\",\"DASH\",\"DBIC\",\"DBT\",\"DCR\",\"DCT\",\"DEAL\",\"DEO\",\"DFC\",\"DGB\",\"DGC\",\"DGLD\",\"DIN\",\"DIP\",\"DIVER\",\"DIVI\",\"DLC\",\"DMCH\",\"DMD\",\"DMTC\",\"DNA\",\"DNR\",\"DOCK\",\"DOGE\",\"DOGEC\",\"DONU\",\"DOPE\",\"DOT\",\"DROP\",\"DSM\",\"DST\",\"DT3\",\"DTP\",\"DUN\",\"DVT\",\"DX\",\"DXN\",\"DYN\",\"EARTH\",\"EARTHS\",\"EAST\",\"EBST\",\"EC\",\"ECA\",\"ECC\",\"ECN\",\"EDG\",\"EDRC\",\"EFL\",\"EGEM\",\"ELA\",\"ELF\",\"ELLA\",\"EM\",\"EMC2\",\"EOSC\",\"ERC\",\"ERD\",\"ERE\",\"ERG\",\"ESN\",\"ESS\",\"ETC\",\"ETF\",\"ETHO\",\"ETI\",\"ETN\",\"ETP\",\"ETSC\",\"ETZ\",\"EUNO\",\"EVE\",\"EVO\",\"EVT\",\"EWT\",\"EXCL\",\"EXOS\",\"EXP\",\"FAIR\",\"FC8\",\"FCH\",\"FCT\",\"FCTID\",\"FIAT\",\"FIC\",\"FIL\",\"FIMK\",\"FIN\",\"FIO\",\"FIS\",\"FIX\",\"FJC\",\"FLASH\",\"FLO\",\"FLOW\",\"FLR\",\"FLUID\",\"FO\",\"FRA\",\"FREE\",\"FRST\",\"FSN\",\"FTC\",\"FXTC\",\"GALI\",\"GAME\",\"GARD\",\"GB\",\"GBCR\",\"GBT\",\"GBX\",\"GC\",\"GCR\",\"GENOM\",\"GFN\",\"GHOST\",\"GIN\",\"GLEEC\",\"GNX\",\"GO\",\"GOD\",\"GOSS\",\"GRAM\",\"GRC\",\"GRIN\",\"GRS\",\"GTM\",\"GXC\",\"GXX\",\"HASH\",\"HATCH\",\"HBC\",\"HC\",\"HDD\",\"HEAT\",\"HET\",\"HLM\",\"HNC\",\"HNS\",\"HODL\",\"HPB\",\"HSN\",\"HSR\",\"HST\",\"HTDF\",\"HTH\",\"HTML\",\"HTR\",\"HUSH\",\"HYC\",\"HYD\",\"HYN\",\"ICL\",\"ICU\",\"ICX\",\"IDNA\",\"IF\",\"ILT\",\"IMG\",\"INSN\",\"IOC\",\"ION\",\"IOP\",\"IOST\",\"IOTA\",\"IoTE\",\"IOTX\",\"IOV\",\"IPC\",\"IPOS\",\"IQS\",\"IRIS\",\"IXC\",\"JBS\",\"JCT\",\"JOYS\",\"KAL\",\"KAR\",\"KAVA\",\"KELP\",\"KETH\",\"KEX\",\"KIN\",\"KMD\",\"KOBO\",\"KOTO\",\"KPG\",\"KPL\",\"KSM\",\"KTS\",\"KTV\",\"KUMA\",\"kUSD\",\"KUVA\",\"LAMB\",\"LAT\",\"LAX\",\"LBC\",\"LBTC\",\"LCC\",\"LCH\",\"LDCN\",\"LET\",\"LFC\",\"LHD\",\"LINDA\",\"LINX\",\"LKR\",\"LMO\",\"LN\",\"LOKI\",\"LRG\",\"LSK\",\"LTC\",\"LTHN\",\"LTO\",\"LTP\",\"LTZ\",\"LUNA\",\"LUX\",\"LV\",\"LYRA\",\"MAN\",\"MARS\",\"MASS\",\"MBRS\",\"MCASH\",\"MCM\",\"MDM\",\"MEC\",\"MED\",\"MEM\",\"MESG\",\"META\",\"MHC\",\"MIX\",\"MKF\",\"MNP\",\"MNX\",\"MOAC\",\"MOIN\",\"MONA\",\"MONK\",\"MOON\",\"MSR\",\"MTNS\",\"MTR\",\"MUE\",\"MUSIC\",\"MWC\",\"MXT\",\"MXW\",\"MZC\",\"N8V\",\"NANO\",\"NAS\",\"NAV\",\"NBT\",\"NCG\",\"NCH\",\"NEAR\",\"NEBL\",\"NEET\",\"NEO\",\"NEOS\",\"NIM\",\"NIX\",\"NKN\",\"NLC2\",\"NLG\",\"NMC\",\"NODE\",\"NOLLAR\",\"NOR\",\"NOS\",\"NOVO\",\"NPW\",\"NRG\",\"NRO\",\"NSR\",\"NTY\",\"NUKO\",\"NULS\",\"NVC\",\"NXS\",\"NXT\",\"NYC\",\"NYZO\",\"OBSR\",\"OCEAN\",\"ODN\",\"ODX\",\"OGC\",\"OGO\",\"OK\",\"OKP\",\"OKT\",\"OLO\",\"OLT\",\"OMNI\",\"ONE\",\"ONION\",\"ONT\",\"ONX\",\"OOT\",\"OTC\",\"PART\",\"PCN\",\"PCX\",\"PESO\",\"PEXA\",\"PHL\",\"PHR\",\"PINK\",\"PION\",\"PIRL\",\"PIVX\",\"PKB\",\"PKC\",\"PKT\",\"PLC\",\"PLUG\",\"PND\",\"POA\",\"POLIS\",\"POLYX\",\"POT\",\"PPC\",\"PRCY\",\"PRJ\",\"PRKL\",\"PRV\",\"PSB\",\"PTC\",\"PTN\",\"PUT\",\"PWR\",\"QBC\",\"QKC\",\"QLC\",\"QOS\",\"QRK\",\"QRL\",\"QTUM\",\"QVT\",\"RAP\",\"RBTC\",\"RBY\",\"RDD\",\"REOSC\",\"RES\",\"RIC\",\"RICHX\",\"RIL\",\"RIN\",\"RISE\",\"RITO\",\"RNG\",\"RNL\",\"ROGER\",\"ROI\",\"ROSE\",\"RPD\",\"RPT\",\"RUNE\",\"RUPX\",\"RUTA\",\"RVN\",\"RYO\",\"SAFE\",\"SBC\",\"SBTC\",\"SCAP\",\"SCC\",\"SCDO\",\"SCRIBE\",\"SCRT\",\"SDC\",\"SDGO\",\"SEELE\",\"SEELEN\",\"SEM\",\"SEOS\",\"SEQ\",\"SERO\",\"SFRX\",\"SH\",\"SHARD\",\"SHIT\",\"SHM\",\"SHN\",\"SHR\",\"SIERRA\",\"SIN\",\"SKY\",\"SLP\",\"SLR\",\"SLS\",\"SLU\",\"SLX\",\"SMART\",\"SMESH\",\"SMLY\",\"SNOW\",\"SOL\",\"SOOM\",\"SOV\",\"SOX\",\"SPL\",\"SRM\",\"SSC\",\"SSN\",\"SSP\",\"STAK\",\"START\",\"STASH\",\"STB\",\"STEEM\",\"STO\",\"STR\",\"STRAT\",\"STX\",\"SUGAR\",\"SUM\",\"SUMO\",\"SWIFT\",\"SWTC\",\"SYS\",\"TAN\",\"TAO\",\"TEA\",\"TELOS\",\"TEO\",\"TES\",\"TFUEL\",\"THC\",\"THETA\",\"THT\",\"TKEY\",\"TNET\",\"TOA\",\"TOMO\",\"TON\",\"TOP\",\"TPAY\",\"TPC\",\"TRC\",\"TRTL\",\"TRUE\",\"TRX\",\"TT\",\"TWINS\",\"TZC\",\"UBQ\",\"UC\",\"UFO\",\"UGAS\",\"ULC\",\"UMBRU\",\"UND\",\"UNIFY\",\"UNO\",\"USC\",\"USDP\",\"USE\",\"UTE\",\"VAL\",\"VAR\",\"VASH\",\"VC\",\"VCT\",\"VDL\",\"VEE\",\"VEIL\",\"VEO\",\"VESTX\",\"VET\",\"VGO\",\"VIA\",\"VIPS\",\"VITAE\",\"VITE\",\"VIVO\",\"VIVT\",\"VLX\",\"VNSC\",\"Voken\",\"VOX\",\"VSYS\",\"VTC\",\"WAN\",\"WAVES\",\"WBTC\",\"WC\",\"WE\",\"WEB\",\"WGR\",\"WHL\",\"WICC\",\"WOW\",\"X42\",\"XAS\",\"XAX\",\"XAZAB\",\"XBC\",\"XBI\",\"XCH\",\"XCP\",\"XCX\",\"XDAG\",\"XDAI\",\"XDC\",\"XDN\",\"XEM\",\"XEP\",\"XERO\",\"XFE\",\"XHB\",\"XHV\",\"XLM\",\"XLR\",\"XMCC\",\"XMR\",\"XMX\",\"XMY\",\"XND\",\"XNOS\",\"XNS\",\"XPC\",\"XPM\",\"XRD\",\"XRP\",\"XRPHD\",\"XSEL\",\"XSG\",\"XSN\",\"XSPEC\",\"XST\",\"XTH\",\"XTL\",\"XTNC\",\"XTX\",\"XTZ\",\"XUEZ\",\"XVG\",\"XWC\",\"XWCC\",\"XYM\",\"XZC\",\"YAP\",\"YCC\",\"YCE\",\"YEC\",\"YEE\",\"YOU\",\"ZBC\",\"ZBUX\",\"ZCL\",\"ZCR\",\"ZEC\",\"ZEL\",\"ZEN\",\"ZER\",\"ZEST\",\"ZIL\",\"ZILLA\",\"ZNY\",\"ZNZ\",\"ZOC\",\"ZOOM\",\"ZPM\",\"ZRC\",\"ZSLP\",\"ZVC\",\"ZY\",\"ZYD\"]\n\nexport default symbols;\n","import React, { Component } from 'react';\nimport {\n  Button,\n  Form,\n  Icon,\n  Message,\n  Modal,\n  Segment,\n  Table,\n} from 'semantic-ui-react';\n\nimport symbols from '../../symbols';\n\nconst defaultFields = {\n  fio_address: '',\n  public_addresses: [],\n  max_fee: '',\n  actor: '',\n  tpid: 'tpid@greymass',\n}\n\nexport default class NewAssociation extends Component {\n  constructor(props) {\n    super(props);\n    this.symbols = symbols.map((s) => ({\n      key: s,\n      text: s,\n      value: s,\n    }));\n    this.state = {\n      account: undefined,\n      balance: undefined,\n      errors: [],\n      fee: undefined,\n      fields: Object.assign({}, defaultFields, {\n        fio_address: this.props.address.name,\n      }),\n      show: false,\n    };\n  }\n  onOpen = (e, data) => {\n    this.resetData();\n    this.getAccount();\n    this.getBalance();\n    this.getFee();\n  }\n  resetData = () => this.setState({\n    account: undefined,\n    balance: undefined,\n    errors: [],\n    fee: undefined,\n    fields: Object.assign({}, defaultFields, {\n      fio_address: this.props.address.name,\n    }),\n  })\n  getAccount = () => {\n    const { ual: { activeUser } } = this.props;\n    activeUser.rpc.get_account(activeUser.accountName).then((account) => {\n      this.setState({\n        account,\n        fields: Object.assign({}, this.state.fields, {\n          actor: activeUser.accountName,\n        })\n      })\n    });\n  }\n  getBalance = () => {\n    const { ual: { activeUser } } = this.props;\n    activeUser.rpc.get_currency_balance('fio.token', activeUser.accountName, 'fio').then((balance) => this.setState({ balance }));\n  }\n  getFee = () => {\n    const { ual: { activeUser: { rpc } } } = this.props;\n    rpc.get_table_rows({\n      code: 'fio.fee',\n      table: 'fiofees',\n      scope: 'fio.fee',\n      key_type: 'i128',\n      index_position: 2,\n      lower_bound: '0x1769ecaf35c00341b5a2e1760114648e',\n      upper_bound: '0x1769ecaf35c00341b5a2e1760114648e',\n      limit: 1,\n    }).then((results) => {\n      this.setState({\n        fee: results.rows[0],\n        fields: Object.assign({}, this.state.fields, {\n          max_fee: results.rows[0].suf_amount\n        })\n      });\n    })\n  }\n  hide = () => this.setState({ show: false })\n  show = () => this.setState({ show: true })\n  onChange = (e, { name, value }) => this.setState({\n    fields: Object.assign({}, this.state.fields, {\n      [name]: value\n    })\n  })\n  onChangeAddress = (e, { name, value }) => {\n    console.log(name, value)\n    this.setState({\n      fields: Object.assign({}, this.state.fields, {\n        public_addresses: [Object.assign({}, this.state.fields.public_addresses[0], {\n          [name]: value\n        })]\n      })\n    })\n  }\n  transact = async () => {\n    const { fields } = this.state;\n    const { ual: { activeUser } } = this.props\n    try {\n      const { accountName, requestPermission } = activeUser\n      const tx = {\n        actions: [{\n          account: 'fio.address',\n          name: 'addaddress',\n          authorization: [{ actor: accountName, permission: requestPermission }],\n          data: fields,\n        }],\n      }\n      await activeUser.signTransaction(tx, { expireSeconds: 120, blocksBehind: 3 })\n      this.props.onSuccess();\n      this.hide();\n    } catch (e) {\n      console.log(e)\n      this.setState({\n        errors: e.cause.json.fields\n      })\n    }\n  }\n  render() {\n    const {\n      balance,\n      errors,\n      fee,\n      fields,\n      show,\n    } = this.state;\n    return (\n      <Modal\n        closeIcon\n        content={(\n          <Segment\n            padded\n            size=\"large\"\n            style={{ marginTop: 0 }}\n          >\n            <Segment color=\"blue\" secondary>\n              <Table size=\"large\">\n                <Table.Row>\n                  <Table.Cell>\n                    Current FIO Balance\n                  </Table.Cell>\n                  <Table.Cell textAlign=\"right\">\n                    {(balance)\n                      ? (\n                        <strong>{balance[0]}</strong>\n                      )\n                      : (\n                        <Icon name=\"spinner\" loading />\n                      )\n                    }\n                  </Table.Cell>\n                </Table.Row>\n                <Table.Row>\n                  <Table.Cell>\n                    Address Registration Fee\n                  </Table.Cell>\n                  <Table.Cell textAlign=\"right\">\n                    {(fee)\n                      ? (\n                        <strong>{(fee.suf_amount / 1000000000).toFixed(9)} FIO</strong>\n                      )\n                      : (\n                        <Icon name=\"spinner\" loading />\n                      )\n                    }\n                  </Table.Cell>\n                </Table.Row>\n              </Table>\n            </Segment>\n            <Form\n              error={errors.length}\n              onSubmit={this.transact}\n            >\n              {Object.keys(fields).map((field) => {\n                const [error] = errors.filter((e) => e.name === field)\n                if (field === 'tpid') return false\n                if (field === 'public_addresses') {\n                  return (\n                    <Form.Field>\n                      <label>Chain Code</label>\n                      <Form.Dropdown\n                        autoFocus\n                        onChange={this.onChangeAddress}\n                        options={this.symbols}\n                        name=\"chain_code\"\n                        search\n                        selection\n                      />\n                      <label>Token Symbol</label>\n                      <Form.Input\n                        name=\"token_code\"\n                        onChange={this.onChangeAddress}\n                        search\n                        selection\n                      />\n                      <label>Public Address</label>\n                      <Form.Input\n                        name=\"public_address\"\n                        onChange={this.onChangeAddress}\n                        search\n                        selection\n                      />\n                    </Form.Field>\n                  )\n                }\n                return (\n                  <Form.Field>\n                    <label style={{\n                      textTransform: 'capitalize',\n                    }}>\n                      {field.replace(/_/g, ' ')}\n                    </label>\n                    <Form.Input\n                      error={(error)\n                        ? {\n                          content: error.error,\n                          pointing: 'above',\n                        }\n                        : false\n                      }\n                      name={field}\n                      onChange={this.onChange}\n                      value={fields[field]}\n                    />\n                  </Form.Field>\n                );\n              })}\n              <Message\n                error\n                header='An error occurred while submitting the transaction'\n                content='Check the red fields above to correct the problems and try again.'\n              />\n              <Segment basic clearing>\n                <Button\n                  content=\"Add Address Association\"\n                  floated=\"right\"\n                  primary\n                />\n              </Segment>\n            </Form>\n          </Segment>\n        )}\n        header=\"Associate an address\"\n        open={show}\n        onClose={this.hide}\n        onOpen={this.onOpen}\n        trigger={(\n          <Button\n            basic\n            content={`Add Address Association`}\n            icon=\"plus\"\n            onClick={this.show}\n            primary\n            size=\"small\"\n          />\n        )}\n      />\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport {\n  Button,\n  Form,\n  Icon,\n  Message,\n  Modal,\n  Segment,\n  Table,\n} from 'semantic-ui-react';\n\nconst defaultFields = {\n  fio_address: '',\n  max_fee: '',\n  actor: '',\n  tpid: 'tpid@greymass',\n}\n\nexport default class RenewAddress extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      account: undefined,\n      balance: undefined,\n      errors: [],\n      fee: undefined,\n      fields: Object.assign({}, defaultFields, {\n        fio_address: this.props.address.name,\n      }),\n      show: false,\n    };\n  }\n  onOpen = (e, data) => {\n    this.resetData();\n    this.getAccount();\n    this.getBalance();\n    this.getFee();\n  }\n  resetData = () => this.setState({\n    account: undefined,\n    balance: undefined,\n    errors: [],\n    fee: undefined,\n    fields: Object.assign({}, defaultFields, {\n      fio_address: this.props.address.name,\n    }),\n  })\n  getAccount = () => {\n    const { ual: { activeUser } } = this.props;\n    activeUser.rpc.get_account(activeUser.accountName).then((account) => {\n      this.setState({\n        account,\n        fields: Object.assign({}, this.state.fields, {\n          actor: activeUser.accountName\n        })\n      })\n    });\n  }\n  getBalance = () => {\n    const { ual: { activeUser } } = this.props;\n    activeUser.rpc.get_currency_balance('fio.token', activeUser.accountName, 'fio').then((balance) => this.setState({ balance }));\n  }\n  getFee = () => {\n    const { ual: { activeUser: { rpc } } } = this.props;\n    rpc.get_table_rows({\n      code: 'fio.fee',\n      table: 'fiofees',\n      scope: 'fio.fee',\n      key_type: 'i128',\n      index_position: 2,\n      lower_bound: '0x006297f2f6c829f9ea733362cd1d3e3a',\n      upper_bound: '0x006297f2f6c829f9ea733362cd1d3e3a',\n      limit: 1,\n    }).then((results) => {\n      this.setState({\n        fee: results.rows[0],\n        fields: Object.assign({}, this.state.fields, {\n          max_fee: results.rows[0].suf_amount\n        })\n      });\n    })\n  }\n  hide = () => this.setState({ show: false })\n  show = () => this.setState({ show: true })\n  onChange = (e, { name, value }) => this.setState({\n    fields: Object.assign({}, this.state.fields, {\n      [name]: value\n    })\n  })\n  transact = async () => {\n    const { fields } = this.state;\n    const { ual: { activeUser } } = this.props\n    try {\n      const { accountName, requestPermission } = activeUser\n      const tx = {\n        actions: [{\n          account: 'fio.address',\n          name: 'renewaddress',\n          authorization: [{ actor: accountName, permission: requestPermission }],\n          data: fields,\n        }],\n      }\n      await activeUser.signTransaction(tx, { expireSeconds: 120, blocksBehind: 3 })\n      this.props.onSuccess();\n      this.hide();\n    } catch (e) {\n      this.setState({\n        errors: e.cause.json.fields\n      })\n    }\n  }\n  render() {\n    const {\n      balance,\n      errors,\n      fee,\n      fields,\n      show,\n    } = this.state;\n    return (\n      <Modal\n        closeIcon\n        content={(\n          <Segment\n            padded\n            size=\"large\"\n            style={{ marginTop: 0 }}\n          >\n            <Segment color=\"blue\" secondary>\n              <Table size=\"large\">\n                <Table.Row>\n                  <Table.Cell>\n                    Current FIO Balance\n                  </Table.Cell>\n                  <Table.Cell textAlign=\"right\">\n                    {(balance)\n                      ? (\n                        <strong>{balance[0]}</strong>\n                      )\n                      : (\n                        <Icon name=\"spinner\" loading />\n                      )\n                    }\n                  </Table.Cell>\n                </Table.Row>\n                <Table.Row>\n                  <Table.Cell>\n                    Address Registration Fee\n                  </Table.Cell>\n                  <Table.Cell textAlign=\"right\">\n                    {(fee)\n                      ? (\n                        <strong>{(fee.suf_amount / 1000000000).toFixed(9)} FIO</strong>\n                      )\n                      : (\n                        <Icon name=\"spinner\" loading />\n                      )\n                    }\n                  </Table.Cell>\n                </Table.Row>\n              </Table>\n            </Segment>\n            <Form\n              error={errors.length}\n              onSubmit={this.transact}\n            >\n              {Object.keys(fields).map((field) => {\n                const [error] = errors.filter((e) => e.name === field)\n                if (field === 'tpid') return false\n                return (\n                  <Form.Field>\n                    <label style={{\n                      textTransform: 'capitalize',\n                    }}>\n                      {field.replace(/_/g, ' ')}\n                    </label>\n                    <Form.Input\n                      error={(error)\n                        ? {\n                          content: error.error,\n                          pointing: 'above',\n                        }\n                        : false\n                      }\n                      name={field}\n                      onChange={this.onChange}\n                      value={fields[field]}\n                    />\n                  </Form.Field>\n                );\n              })}\n              <Message\n                error\n                header='An error occurred while submitting the transaction'\n                content='Check the red fields above to correct the problems and try again.'\n              />\n              <Segment basic clearing>\n                <Button\n                  content=\"Renew Address\"\n                  floated=\"right\"\n                  primary\n                />\n              </Segment>\n            </Form>\n          </Segment>\n        )}\n        header=\"Renew FIO Address\"\n        open={show}\n        onClose={this.hide}\n        onOpen={this.onOpen}\n        trigger={(\n          <Button\n            basic\n            content={`Renew Address`}\n            onClick={this.show}\n            primary\n            size=\"small\"\n          />\n        )}\n      />\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport {\n  Button,\n  Form,\n  Icon,\n  Message,\n  Modal,\n  Segment,\n  Table,\n} from 'semantic-ui-react';\n\nconst defaultFields = {\n  disabled: false,\n  fio_address: '',\n  new_owner_fio_public_key: '',\n  max_fee: '',\n  actor: '',\n  tpid: 'tpid@greymass',\n}\n\nexport default class TransferAddress extends Component {\n  state = {\n    account: undefined,\n    balance: undefined,\n    disabled: false,\n    errors: [],\n    fee: undefined,\n    fields: defaultFields,\n    show: false,\n  }\n  onOpen = (e, data) => {\n    this.resetData();\n    this.getAccount();\n    this.getBalance();\n    this.getFee();\n  }\n  resetData = () => this.setState({\n    account: undefined,\n    balance: undefined,\n    errors: [],\n    fee: undefined,\n    fields: Object.assign({}, defaultFields, {\n      fio_address: this.props.address.name,\n    }),\n  })\n  getAccount = () => {\n    const { ual: { activeUser } } = this.props;\n    activeUser.rpc.get_account(activeUser.accountName).then((account) => {\n      this.setState({\n        account,\n        fields: Object.assign({}, this.state.fields, {\n          actor: activeUser.accountName\n        })\n      })\n    });\n  }\n  getBalance = () => {\n    const { ual: { activeUser } } = this.props;\n    activeUser.rpc.get_currency_balance('fio.token', activeUser.accountName, 'fio').then((balance) => this.setState({ balance }));\n  }\n  getFee = () => {\n    const { ual: { activeUser: { rpc } } } = this.props;\n    rpc.get_table_rows({\n      code: 'fio.fee',\n      table: 'fiofees',\n      scope: 'fio.fee',\n      key_type: 'i128',\n      index_position: 2,\n      lower_bound: '0x1a01296e38e9dcd89d5f3228db99cc26',\n      upper_bound: '0x1a01296e38e9dcd89d5f3228db99cc26',\n      limit: 1,\n    }).then((results) => {\n      if (results.rows.length) {\n        this.setState({\n          disabled: false,\n          fee: results.rows[0],\n          fields: Object.assign({}, this.state.fields, {\n            max_fee: results.rows[0].suf_amount\n          })\n        });\n      } else {\n        this.setState({\n          disabled: true\n        })\n      }\n    })\n  }\n  hide = () => this.setState({ show: false })\n  show = () => this.setState({ show: true })\n  onChange = (e, { name, value }) => this.setState({\n    fields: Object.assign({}, this.state.fields, {\n      [name]: value\n    })\n  })\n  transact = async () => {\n    const { fields } = this.state;\n    const { ual: { activeUser } } = this.props\n    try {\n      const { accountName, requestPermission } = activeUser\n      const tx = {\n        actions: [{\n          account: 'fio.address',\n          name: 'xferaddress',\n          authorization: [{ actor: accountName, permission: requestPermission }],\n          data: fields,\n        }],\n      }\n      await activeUser.signTransaction(tx, { expireSeconds: 120, blocksBehind: 3 })\n      this.props.onSuccess();\n      this.hide();\n    } catch (e) {\n      console.log(e);\n\n      this.setState({\n        errors: e.cause.json.fields\n      })\n    }\n  }\n  render() {\n    const {\n      balance,\n      disabled,\n      errors,\n      fee,\n      fields,\n      show,\n    } = this.state;\n    if (disabled) {\n      return (\n        <Modal\n          closeIcon\n          content={(\n            <Segment\n              padded\n              size=\"large\"\n              style={{ marginTop: 0 }}\n            >\n              Feature not yet available.\n            </Segment>\n          )}\n          header=\"Transfer a FIO Address\"\n          open={show}\n          onClose={this.hide}\n          onOpen={this.onOpen}\n          trigger={(\n            <Button\n              basic\n              content={`Transfer Address`}\n              onClick={this.show}\n              primary\n              size=\"small\"\n            />\n          )}\n        />\n      )\n    }\n    return (\n      <Modal\n        closeIcon\n        content={(\n          <Segment\n            padded\n            size=\"large\"\n            style={{ marginTop: 0 }}\n          >\n            <Segment color=\"blue\" secondary>\n              <Table size=\"large\">\n                <Table.Row>\n                  <Table.Cell>\n                    Current FIO Balance\n                  </Table.Cell>\n                  <Table.Cell textAlign=\"right\">\n                    {(balance)\n                      ? (\n                        <strong>{balance[0]}</strong>\n                      )\n                      : (\n                        <Icon name=\"spinner\" loading />\n                      )\n                    }\n                  </Table.Cell>\n                </Table.Row>\n                <Table.Row>\n                  <Table.Cell>\n                    Address Transfer Fee\n                  </Table.Cell>\n                  <Table.Cell textAlign=\"right\">\n                    {(fee)\n                      ? (\n                        <strong>{(fee.suf_amount / 1000000000).toFixed(9)} FIO</strong>\n                      )\n                      : (\n                        <Icon name=\"spinner\" loading />\n                      )\n                    }\n                  </Table.Cell>\n                </Table.Row>\n              </Table>\n            </Segment>\n            <Form\n              error={errors.length}\n              onSubmit={this.transact}\n            >\n              {Object.keys(fields).filter(n => n !== \"disabled\").map((field) => {\n                const [error] = errors.filter((e) => e.name === field)\n                if (field === 'tpid') return false\n                return (\n                  <Form.Field>\n                    <label style={{\n                      textTransform: 'capitalize',\n                    }}>\n                      {field.replace(/_/g, ' ')}\n                    </label>\n                    <Form.Input\n                      error={(error)\n                        ? {\n                          content: error.error,\n                          pointing: 'above',\n                        }\n                        : false\n                      }\n                      name={field}\n                      onChange={this.onChange}\n                      value={fields[field]}\n                    />\n                  </Form.Field>\n                );\n              })}\n              <Message\n                error\n                header='An error occurred while submitting the transaction'\n                content='Check the red fields above to correct the problems and try again.'\n              />\n              <Segment basic clearing>\n                <Button\n                  content=\"Transfer Address\"\n                  floated=\"right\"\n                  primary\n                />\n              </Segment>\n            </Form>\n          </Segment>\n        )}\n        header=\"Transfer a FIO Address\"\n        open={show}\n        onClose={this.hide}\n        onOpen={this.onOpen}\n        trigger={(\n          <Button\n            basic\n            content={`Transfer Address`}\n            onClick={this.show}\n            primary\n            size=\"small\"\n          />\n        )}\n      />\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport {\n  Button,\n  Container,\n  Header,\n  Segment,\n  Table,\n} from 'semantic-ui-react';\n\nimport { partition } from 'lodash';\n\nimport NewAddress from './Modals/NewAddress';\nimport NewAssociation from './Modals/NewAssociation';\nimport RenewAddress from './Modals/RenewAddress';\nimport TransferAddress from './Modals/TransferAddress';\n\nexport default class Addresses extends Component {\n  state = {\n    addresses: [],\n    owner_fio_public_key: '',\n  }\n  componentDidMount() {\n    const { ual: { activeUser } } = this.props;\n    if (activeUser) {\n      this.sync()\n    }\n  }\n  sync = () => {\n    const { ual: { activeUser } } = this.props;\n    this.getAddresses(activeUser.accountName);\n  }\n  onSuccess = () => {\n    this.sync();\n  }\n  getAddresses = (accountName) => {\n    const { ual: { activeUser: { rpc } } } = this.props;\n    rpc.get_table_rows({\n      code: 'fio.address',\n      table: 'fionames',\n      scope: 'fio.address',\n      key_type: 'name',\n      index_position: 4,\n      lower_bound: accountName,\n      upper_bound: accountName,\n      limit: 10,\n    }).then((results) => {\n      const partitionQuery = {\n        owner_account: accountName\n      };\n      const [, others] = partition(this.state.addresses, partitionQuery);\n      rpc.get_account(accountName).then((account) => {\n        this.setState({\n          addresses: [\n            ...others,\n            ...results.rows\n          ],\n          owner_fio_public_key: account.permissions.filter((p) => p.perm_name === 'owner')[0].required_auth.keys[0].key\n        })\n      });\n    })\n  }\n  render() {\n    const {\n      addresses,\n    } = this.state;\n    return (\n      <Container fluid>\n        <Segment\n          attached=\"top\"\n          clearing\n          secondary\n        >\n          <Header\n            floated=\"left\"\n            size=\"large\"\n          >\n            FIO Addresses\n            <Header.Subheader>\n              Manage the addresses you control and their associated keys.\n            </Header.Subheader>\n          </Header>\n          <Button\n            content=\"Refresh Data\"\n            floated=\"right\"\n            icon=\"refresh\"\n            onClick={this.sync}\n          />\n          <NewAddress\n            basic={false}\n            color=\"blue\"\n            floated=\"right\"\n            onSuccess={this.onSuccess}\n            ual={this.props.ual}\n          />\n          <a class=\"ui blue right floated button\" href={ 'https://reg.fioprotocol.io/address/fioreghelper?publicKey=' + this.state.owner_fio_public_key }><i aria-hidden=\"true\" class=\"dollar icon\"></i>Buy FIO Address</a>\n        </Segment>\n        {(!addresses.length)\n          ? (\n            <Segment\n              attached=\"bottom\"\n              size=\"large\"\n              textAlign=\"center\"\n            >\n              <Header>\n                No addresses associated to this account. Register one to get started.\n              </Header>\n            </Segment>\n          )\n          : false\n        }\n        {(addresses.length)\n          ? (\n            <Table\n              attached=\"bottom\"\n              padded\n              striped\n            >\n              <Table.Header>\n                <Table.Row>\n                  <Table.HeaderCell>\n                    Domain Name\n                  </Table.HeaderCell>\n                  <Table.HeaderCell>\n                    Addresses\n                  </Table.HeaderCell>\n                </Table.Row>\n              </Table.Header>\n              <Table.Body>\n                {addresses.map((address) => {\n                  return (\n                    <Table.Row>\n                      <Table.Cell collapsing verticalAlign=\"top\">\n                        <Header>\n                          {address.name}\n                        </Header>\n                        <Table definition>\n                          <Table.Body>\n                            <Table.Row>\n                              <Table.Cell>Bundled Txs</Table.Cell>\n                              <Table.Cell>{address.bundleeligiblecountdown}</Table.Cell>\n                            </Table.Row>\n                            <Table.Row>\n                              <Table.Cell>Expires</Table.Cell>\n                              <Table.Cell>{(new Date(address.expiration * 1000)).toUTCString()}</Table.Cell>\n                            </Table.Row>\n                            <Table.Row>\n                              <Table.Cell>Renew</Table.Cell>\n                              <Table.Cell>\n                                <RenewAddress\n                                  address={address}\n                                  onSuccess={this.onSuccess}\n                                  ual={this.props.ual}\n                                />\n                              </Table.Cell>\n                            </Table.Row>\n                            <Table.Row>\n                              <Table.Cell>Transfer</Table.Cell>\n                              <Table.Cell>\n                                <TransferAddress\n                                  address={address}\n                                  onSuccess={this.onSuccess}\n                                  ual={this.props.ual}\n                                />\n                              </Table.Cell>\n                            </Table.Row>\n                          </Table.Body>\n                        </Table>\n                      </Table.Cell>\n                      <Table.Cell textAlign=\"right\">\n                        {(address.addresses.length)\n                          ? (\n                            <Table definition>\n                              <Table.Header>\n                                <Table.Row>\n                                  <Table.HeaderCell>Chain</Table.HeaderCell>\n                                  <Table.HeaderCell>Token</Table.HeaderCell>\n                                  <Table.HeaderCell>Address</Table.HeaderCell>\n                                </Table.Row>\n                              </Table.Header>\n                              <Table.Body>\n                                {address.addresses.map((a) => (\n                                  <Table.Row>\n                                    <Table.Cell>{a.chain_code}</Table.Cell>\n                                    <Table.Cell>{a.token_code}</Table.Cell>\n                                    <Table.Cell>\n                                      {a.public_address}\n                                    </Table.Cell>\n                                  </Table.Row>\n                                ))}\n                              </Table.Body>\n                            </Table>\n                          )\n                          : (\n                            <Segment textAlign=\"left\">\n                              <Header size=\"small\">\n                                No associated addresses\n                                <Header.Subheader>\n                                  Create a new FIO address for this domain using the button below.\n                                </Header.Subheader>\n                              </Header>\n                            </Segment>\n                          )\n                        }\n                        <NewAssociation\n                          address={address}\n                          onSuccess={this.onSuccess}\n                          ual={this.props.ual}\n                        />\n                      </Table.Cell>\n                    </Table.Row>\n                  )\n                })}\n              </Table.Body>\n            </Table>\n          )\n          : false\n        }\n      </Container>\n\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport {\n  Button,\n  Form,\n  Icon,\n  Message,\n  Modal,\n  Segment,\n  Table,\n} from 'semantic-ui-react';\n\nconst defaultFields = {\n  fio_domain: '',\n  owner_fio_public_key: '',\n  max_fee: '',\n  actor: '',\n  tpid: 'tpid@greymass',\n}\n\nexport default class NewDomain extends Component {\n  state = {\n    account: undefined,\n    balance: undefined,\n    errors: [],\n    fee: undefined,\n    fields: defaultFields,\n    show: false,\n  }\n  onOpen = (e, data) => {\n    this.resetData();\n    this.getAccount();\n    this.getBalance();\n    this.getFee();\n  }\n  resetData = () => this.setState({\n    account: undefined,\n    balance: undefined,\n    errors: [],\n    fee: undefined,\n    fields: defaultFields,\n  })\n  getAccount = () => {\n    const { ual: { activeUser } } = this.props;\n    activeUser.rpc.get_account(activeUser.accountName).then((account) => {\n      this.setState({\n        account,\n        fields: Object.assign({}, this.state.fields, {\n          actor: activeUser.accountName,\n          owner_fio_public_key: account.permissions.filter((p) => p.perm_name === 'owner')[0].required_auth.keys[0].key\n        })\n      })\n    });\n  }\n  getBalance = () => {\n    const { ual: { activeUser } } = this.props;\n    activeUser.rpc.get_currency_balance('fio.token', activeUser.accountName, 'fio').then((balance) => this.setState({ balance }));\n  }\n  getFee = () => {\n    const { ual: { activeUser: { rpc } } } = this.props;\n    rpc.get_table_rows({\n      code: 'fio.fee',\n      table: 'fiofees',\n      scope: 'fio.fee',\n      key_type: 'i128',\n      index_position: 2,\n      lower_bound: '0xe7961b95f481a901b3bfa23b800c8fb3',\n      upper_bound: '0xe7961b95f481a901b3bfa23b800c8fb3',\n      limit: 1,\n    }).then((results) => {\n      this.setState({\n        fee: results.rows[0],\n        fields: Object.assign({}, this.state.fields, {\n          max_fee: results.rows[0].suf_amount\n        })\n      });\n      // if (results.rows.length) {\n      //   results.rows.map(this.getAddresses);\n      // }\n    })\n  }\n  hide = () => this.setState({ show: false })\n  show = () => this.setState({ show: true })\n  onChange = (e, { name, value }) => this.setState({\n    fields: Object.assign({}, this.state.fields, {\n      [name]: value\n    })\n  })\n  transact = async () => {\n    const { fields } = this.state;\n    const { ual: { activeUser } } = this.props\n    try {\n      const { accountName, requestPermission } = activeUser\n      const tx = {\n        actions: [{\n          account: 'fio.address',\n          name: 'regdomain',\n          authorization: [{ actor: accountName, permission: requestPermission }],\n          data: fields,\n        }],\n      }\n      await activeUser.signTransaction(tx, { expireSeconds: 120, blocksBehind: 3 })\n      this.props.onSuccess();\n      this.hide();\n    } catch (e) {\n      this.setState({\n        errors: e.cause.json.fields\n      })\n    }\n  }\n  render() {\n    const {\n      balance,\n      errors,\n      fee,\n      fields,\n      show,\n    } = this.state;\n    return (\n      <Modal\n        closeIcon\n        content={(\n          <Segment\n            padded\n            size=\"large\"\n            style={{ marginTop: 0 }}\n          >\n            <Segment color=\"blue\" secondary>\n              <Table size=\"large\">\n                <Table.Row>\n                  <Table.Cell>\n                    Current FIO Balance\n                  </Table.Cell>\n                  <Table.Cell textAlign=\"right\">\n                    {(balance)\n                      ? (\n                        <strong>{balance[0]}</strong>\n                      )\n                      : (\n                        <Icon name=\"spinner\" loading />\n                      )\n                    }\n                  </Table.Cell>\n                </Table.Row>\n                <Table.Row>\n                  <Table.Cell>\n                    Domain Registration Fee\n                  </Table.Cell>\n                  <Table.Cell textAlign=\"right\">\n                    {(fee)\n                      ? (\n                        <strong>{(fee.suf_amount / 1000000000).toFixed(9)} FIO</strong>\n                      )\n                      : (\n                        <Icon name=\"spinner\" loading />\n                      )\n                    }\n                  </Table.Cell>\n                </Table.Row>\n              </Table>\n            </Segment>\n            <Form\n              error={errors.length}\n              onSubmit={this.transact}\n            >\n              {Object.keys(fields).map((field) => {\n                const [error] = errors.filter((e) => e.name === field)\n                if (field === 'tpid') return false\n                return (\n                  <Form.Field>\n                    <label style={{\n                      textTransform: 'capitalize',\n                    }}>\n                      {field.replace(/_/g, ' ')}\n                    </label>\n                    <Form.Input\n                      error={(error)\n                        ? {\n                          content: error.error,\n                          pointing: 'above',\n                        }\n                        : false\n                      }\n                      name={field}\n                      onChange={this.onChange}\n                      value={fields[field]}\n                    />\n                  </Form.Field>\n                );\n              })}\n              <Message\n                error\n                header='An error occurred while submitting the transaction'\n                content='Check the red fields above to correct the problems and try again.'\n              />\n              <Segment basic clearing>\n                <Button\n                  content=\"Register Domain\"\n                  floated=\"right\"\n                  primary\n                />\n              </Segment>\n            </Form>\n          </Segment>\n        )}\n        header=\"Register a FIO Domain\"\n        open={show}\n        onClose={this.hide}\n        onOpen={this.onOpen}\n        trigger={(\n          <Button\n            content=\"Register Domain\"\n            floated=\"right\"\n            icon=\"plus\"\n            onClick={this.show}\n            primary\n          />\n        )}\n      />\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport {\n  Button,\n  Form,\n  Icon,\n  Message,\n  Modal,\n  Segment,\n  Table,\n} from 'semantic-ui-react';\n\nconst defaultFields = {\n  fio_domain: '',\n  max_fee: '',\n  actor: '',\n  tpid: 'tpid@greymass',\n}\n\nexport default class RenewDomain extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      account: undefined,\n      balance: undefined,\n      errors: [],\n      fee: undefined,\n      fields: Object.assign({}, defaultFields, {\n        fio_domain: this.props.domain.name,\n      }),\n      show: false,\n    };\n    console.log(this.props.domain.name)\n  }\n  onOpen = (e, data) => {\n    this.resetData();\n    this.getAccount();\n    this.getBalance();\n    this.getFee();\n  }\n  resetData = () => this.setState({\n    account: undefined,\n    balance: undefined,\n    errors: [],\n    fee: undefined,\n    fields: Object.assign({}, defaultFields, {\n      fio_domain: this.props.domain.name,\n    }),\n  })\n  getAccount = () => {\n    const { ual: { activeUser } } = this.props;\n    activeUser.rpc.get_account(activeUser.accountName).then((account) => {\n      this.setState({\n        account,\n        fields: Object.assign({}, this.state.fields, {\n          actor: activeUser.accountName\n        })\n      })\n    });\n  }\n  getBalance = () => {\n    const { ual: { activeUser } } = this.props;\n    activeUser.rpc.get_currency_balance('fio.token', activeUser.accountName, 'fio').then((balance) => this.setState({ balance }));\n  }\n  getFee = () => {\n    const { ual: { activeUser: { rpc } } } = this.props;\n    rpc.get_table_rows({\n      code: 'fio.fee',\n      table: 'fiofees',\n      scope: 'fio.fee',\n      key_type: 'i128',\n      index_position: 2,\n      lower_bound: '0x4d41a1a623015e4f0eb5492057967e72',\n      upper_bound: '0x4d41a1a623015e4f0eb5492057967e72',\n      limit: 1,\n    }).then((results) => {\n      this.setState({\n        fee: results.rows[0],\n        fields: Object.assign({}, this.state.fields, {\n          max_fee: results.rows[0].suf_amount\n        })\n      });\n    })\n  }\n  hide = () => this.setState({ show: false })\n  show = () => this.setState({ show: true })\n  onChange = (e, { name, value }) => this.setState({\n    fields: Object.assign({}, this.state.fields, {\n      [name]: value\n    })\n  })\n  transact = async () => {\n    const { fields } = this.state;\n    const { ual: { activeUser } } = this.props\n    try {\n      const { accountName, requestPermission } = activeUser\n      const tx = {\n        actions: [{\n          account: 'fio.address',\n          name: 'renewdomain',\n          authorization: [{ actor: accountName, permission: requestPermission }],\n          data: fields,\n        }],\n      }\n      await activeUser.signTransaction(tx, { expireSeconds: 120, blocksBehind: 3 })\n      this.props.onSuccess();\n      this.hide();\n    } catch (e) {\n      this.setState({\n        errors: e.cause.json.fields\n      })\n    }\n  }\n  render() {\n    const {\n      balance,\n      errors,\n      fee,\n      fields,\n      show,\n    } = this.state;\n    return (\n      <Modal\n        closeIcon\n        content={(\n          <Segment\n            padded\n            size=\"large\"\n            style={{ marginTop: 0 }}\n          >\n            <Segment color=\"blue\" secondary>\n              <Table size=\"large\">\n                <Table.Row>\n                  <Table.Cell>\n                    Current FIO Balance\n                  </Table.Cell>\n                  <Table.Cell textAlign=\"right\">\n                    {(balance)\n                      ? (\n                        <strong>{balance[0]}</strong>\n                      )\n                      : (\n                        <Icon name=\"spinner\" loading />\n                      )\n                    }\n                  </Table.Cell>\n                </Table.Row>\n                <Table.Row>\n                  <Table.Cell>\n                    Address Registration Fee\n                  </Table.Cell>\n                  <Table.Cell textAlign=\"right\">\n                    {(fee)\n                      ? (\n                        <strong>{(fee.suf_amount / 1000000000).toFixed(9)} FIO</strong>\n                      )\n                      : (\n                        <Icon name=\"spinner\" loading />\n                      )\n                    }\n                  </Table.Cell>\n                </Table.Row>\n              </Table>\n            </Segment>\n            <Form\n              error={errors.length}\n              onSubmit={this.transact}\n            >\n              {Object.keys(fields).map((field) => {\n                const [error] = errors.filter((e) => e.name === field)\n                if (field === 'tpid') return false\n                return (\n                  <Form.Field>\n                    <label style={{\n                      textTransform: 'capitalize',\n                    }}>\n                      {field.replace(/_/g, ' ')}\n                    </label>\n                    <Form.Input\n                      error={(error)\n                        ? {\n                          content: error.error,\n                          pointing: 'above',\n                        }\n                        : false\n                      }\n                      name={field}\n                      onChange={this.onChange}\n                      value={fields[field]}\n                    />\n                  </Form.Field>\n                );\n              })}\n              <Message\n                error\n                header='An error occurred while submitting the transaction'\n                content='Check the red fields above to correct the problems and try again.'\n              />\n              <Segment basic clearing>\n                <Button\n                  content=\"Renew Domain\"\n                  floated=\"right\"\n                  primary\n                />\n              </Segment>\n            </Form>\n          </Segment>\n        )}\n        header=\"Renew FIO Domain\"\n        open={show}\n        onClose={this.hide}\n        onOpen={this.onOpen}\n        trigger={(\n          <Button\n            basic\n            content={`Renew Domain`}\n            onClick={this.show}\n            primary\n            size=\"small\"\n          />\n        )}\n      />\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport {\n  Button,\n  Form,\n  Icon,\n  Message,\n  Modal,\n  Segment,\n  Table,\n} from 'semantic-ui-react';\n\nconst defaultFields = {\n  fio_domain: '',\n  is_public: 0,\n  max_fee: '',\n  actor: '',\n  tpid: 'tpid@greymass',\n}\n\nexport default class SetDomainPub extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      account: undefined,\n      balance: undefined,\n      errors: [],\n      fee: undefined,\n      fields: Object.assign({}, defaultFields, {\n        fio_domain: this.props.domain.name,\n        is_public: (this.props.domain.is_public) ? 0 : 1,\n      }),\n      show: false,\n    };\n  }\n  onOpen = (e, data) => {\n    this.resetData();\n    this.getAccount();\n    this.getBalance();\n    this.getFee();\n  }\n  resetData = () => this.setState({\n    account: undefined,\n    balance: undefined,\n    errors: [],\n    fee: undefined,\n    fields: Object.assign({}, defaultFields, {\n      fio_domain: this.props.domain.name,\n      is_public: (this.props.domain.is_public) ? 0 : 1,\n    }),\n  })\n  getAccount = () => {\n    const { ual: { activeUser } } = this.props;\n    activeUser.rpc.get_account(activeUser.accountName).then((account) => {\n      this.setState({\n        account,\n        fields: Object.assign({}, this.state.fields, {\n          actor: activeUser.accountName\n        })\n      })\n    });\n  }\n  getBalance = () => {\n    const { ual: { activeUser } } = this.props;\n    activeUser.rpc.get_currency_balance('fio.token', activeUser.accountName, 'fio').then((balance) => this.setState({ balance }));\n  }\n  getFee = () => {\n    const { ual: { activeUser: { rpc } } } = this.props;\n    rpc.get_table_rows({\n      code: 'fio.fee',\n      table: 'fiofees',\n      scope: 'fio.fee',\n      key_type: 'i128',\n      index_position: 2,\n      lower_bound: '0xcc1f86ae2b6e01071a1998ffbcf27310',\n      upper_bound: '0xcc1f86ae2b6e01071a1998ffbcf27310',\n      limit: 1,\n    }).then((results) => {\n      this.setState({\n        fee: results.rows[0],\n        fields: Object.assign({}, this.state.fields, {\n          max_fee: results.rows[0].suf_amount\n        })\n      });\n    })\n  }\n  hide = () => this.setState({ show: false })\n  show = () => this.setState({ show: true })\n  onChange = (e, { name, value }) => this.setState({\n    fields: Object.assign({}, this.state.fields, {\n      [name]: value\n    })\n  })\n  transact = async () => {\n    const { fields } = this.state;\n    const { ual: { activeUser } } = this.props\n    try {\n      const { accountName, requestPermission } = activeUser\n      const tx = {\n        actions: [{\n          account: 'fio.address',\n          name: 'setdomainpub',\n          authorization: [{ actor: accountName, permission: requestPermission }],\n          data: fields,\n        }],\n      }\n      await activeUser.signTransaction(tx, { expireSeconds: 120, blocksBehind: 3 })\n      this.props.onSuccess();\n      this.hide();\n    } catch (e) {\n      this.setState({\n        errors: e.cause.json.fields\n      })\n    }\n  }\n  render() {\n    const {\n      balance,\n      errors,\n      fee,\n      fields,\n      show,\n    } = this.state;\n    return (\n      <Modal\n        closeIcon\n        content={(\n          <Segment\n            padded\n            size=\"large\"\n            style={{ marginTop: 0 }}\n          >\n            <Segment color=\"blue\" secondary>\n              <Table size=\"large\">\n                <Table.Row>\n                  <Table.Cell>\n                    Current FIO Balance\n                  </Table.Cell>\n                  <Table.Cell textAlign=\"right\">\n                    {(balance)\n                      ? (\n                        <strong>{balance[0]}</strong>\n                      )\n                      : (\n                        <Icon name=\"spinner\" loading />\n                      )\n                    }\n                  </Table.Cell>\n                </Table.Row>\n                <Table.Row>\n                  <Table.Cell>\n                    Domain Privacy Change Fee\n                  </Table.Cell>\n                  <Table.Cell textAlign=\"right\">\n                    {(fee)\n                      ? (\n                        <strong>{(fee.suf_amount / 1000000000).toFixed(9)} FIO</strong>\n                      )\n                      : (\n                        <Icon name=\"spinner\" loading />\n                      )\n                    }\n                  </Table.Cell>\n                </Table.Row>\n              </Table>\n            </Segment>\n            <Form\n              error={errors.length}\n              onSubmit={this.transact}\n            >\n              {Object.keys(fields).map((field) => {\n                const [error] = errors.filter((e) => e.name === field)\n                if (field === 'tpid') return false\n                return (\n                  <Form.Field>\n                    <label style={{\n                      textTransform: 'capitalize',\n                    }}>\n                      {field.replace(/_/g, ' ')}\n                    </label>\n                    <Form.Input\n                      error={(error)\n                        ? {\n                          content: error.error,\n                          pointing: 'above',\n                        }\n                        : false\n                      }\n                      name={field}\n                      onChange={this.onChange}\n                      value={fields[field]}\n                    />\n                  </Form.Field>\n                );\n              })}\n              <Message\n                error\n                header='An error occurred while submitting the transaction'\n                content='Check the red fields above to correct the problems and try again.'\n              />\n              <Segment basic clearing>\n                <Button\n                  content={(this.props.domain.is_public) ? 'Make Private' : 'Make Public'}\n                  floated=\"right\"\n                  primary\n                />\n              </Segment>\n            </Form>\n          </Segment>\n        )}\n        header=\"Change Domain Privacy\"\n        open={show}\n        onClose={this.hide}\n        onOpen={this.onOpen}\n        trigger={(\n          <Button\n            basic\n            content={(this.props.domain.is_public) ? `Make Private` : `Make Public`}\n            onClick={this.show}\n            primary\n            size=\"small\"\n          />\n        )}\n      />\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport {\n  Button,\n  Form,\n  Icon,\n  Message,\n  Modal,\n  Segment,\n  Table,\n} from 'semantic-ui-react';\n\nconst defaultFields = {\n  disabled: false,\n  fio_domain: '',\n  new_owner_fio_public_key: '',\n  max_fee: '',\n  actor: '',\n  tpid: 'tpid@greymass',\n}\n\nexport default class TransferDomain extends Component {\n  state = {\n    account: undefined,\n    balance: undefined,\n    disabled: false,\n    errors: [],\n    fee: undefined,\n    fields: defaultFields,\n    show: false,\n  }\n  onOpen = (e, data) => {\n    this.resetData();\n    this.getAccount();\n    this.getBalance();\n    this.getFee();\n  }\n  resetData = () => this.setState({\n    account: undefined,\n    balance: undefined,\n    errors: [],\n    fee: undefined,\n    fields: Object.assign({}, defaultFields, {\n      fio_domain: this.props.domain.name,\n    }),\n  })\n  getAccount = () => {\n    const { ual: { activeUser } } = this.props;\n    activeUser.rpc.get_account(activeUser.accountName).then((account) => {\n      this.setState({\n        account,\n        fields: Object.assign({}, this.state.fields, {\n          actor: activeUser.accountName\n        })\n      })\n    });\n  }\n  getBalance = () => {\n    const { ual: { activeUser } } = this.props;\n    activeUser.rpc.get_currency_balance('fio.token', activeUser.accountName, 'fio').then((balance) => this.setState({ balance }));\n  }\n  getFee = () => {\n    const { ual: { activeUser: { rpc } } } = this.props;\n    rpc.get_table_rows({\n      code: 'fio.fee',\n      table: 'fiofees',\n      scope: 'fio.fee',\n      key_type: 'i128',\n      index_position: 2,\n      lower_bound: '0x980f6aa5310bb851dc96f6a2d4521891',\n      upper_bound: '0x980f6aa5310bb851dc96f6a2d4521891',\n      limit: 1,\n    }).then((results) => {\n      if (results.rows.length) {\n        this.setState({\n          disabled: false,\n          fee: results.rows[0],\n          fields: Object.assign({}, this.state.fields, {\n            max_fee: results.rows[0].suf_amount\n          })\n        });\n      } else {\n        this.setState({\n          disabled: true\n        })\n      }\n    })\n  }\n  hide = () => this.setState({ show: false })\n  show = () => this.setState({ show: true })\n  onChange = (e, { name, value }) => this.setState({\n    fields: Object.assign({}, this.state.fields, {\n      [name]: value\n    })\n  })\n  transact = async () => {\n    const { fields } = this.state;\n    const { ual: { activeUser } } = this.props\n    try {\n      const { accountName, requestPermission } = activeUser\n      const tx = {\n        actions: [{\n          account: 'fio.address',\n          name: 'xferdomain',\n          authorization: [{ actor: accountName, permission: requestPermission }],\n          data: fields,\n        }],\n      }\n      await activeUser.signTransaction(tx, { expireSeconds: 120, blocksBehind: 3 })\n      this.props.onSuccess();\n      this.hide();\n    } catch (e) {\n      console.log(e);\n\n      this.setState({\n        errors: e.cause.json.fields\n      })\n    }\n  }\n  render() {\n    const {\n      balance,\n      disabled,\n      errors,\n      fee,\n      fields,\n      show,\n    } = this.state;\n    if (disabled) {\n      return (\n        <Modal\n          closeIcon\n          content={(\n            <Segment\n              padded\n              size=\"large\"\n              style={{ marginTop: 0 }}\n            >\n              Feature not yet available.\n            </Segment>\n          )}\n          header=\"Transfer a FIO Domain\"\n          open={show}\n          onClose={this.hide}\n          onOpen={this.onOpen}\n          trigger={(\n            <Button\n              basic\n              content={`Transfer Domain`}\n              onClick={this.show}\n              primary\n              size=\"small\"\n            />\n          )}\n        />\n      )\n    }\n    return (\n      <Modal\n        closeIcon\n        content={(\n          <Segment\n            padded\n            size=\"large\"\n            style={{ marginTop: 0 }}\n          >\n            <Segment color=\"blue\" secondary>\n              <Table size=\"large\">\n                <Table.Row>\n                  <Table.Cell>\n                    Current FIO Balance\n                  </Table.Cell>\n                  <Table.Cell textAlign=\"right\">\n                    {(balance)\n                      ? (\n                        <strong>{balance[0]}</strong>\n                      )\n                      : (\n                        <Icon name=\"spinner\" loading />\n                      )\n                    }\n                  </Table.Cell>\n                </Table.Row>\n                <Table.Row>\n                  <Table.Cell>\n                    Domain Transfer Fee\n                  </Table.Cell>\n                  <Table.Cell textAlign=\"right\">\n                    {(fee)\n                      ? (\n                        <strong>{(fee.suf_amount / 1000000000).toFixed(9)} FIO</strong>\n                      )\n                      : (\n                        <Icon name=\"spinner\" loading />\n                      )\n                    }\n                  </Table.Cell>\n                </Table.Row>\n              </Table>\n            </Segment>\n            <Form\n              error={errors.length}\n              onSubmit={this.transact}\n            >\n              {Object.keys(fields).filter(n => n !== \"disabled\").map((field) => {\n                const [error] = errors.filter((e) => e.name === field)\n                if (field === 'tpid') return false\n                return (\n                  <Form.Field>\n                    <label style={{\n                      textTransform: 'capitalize',\n                    }}>\n                      {field.replace(/_/g, ' ')}\n                    </label>\n                    <Form.Input\n                      error={(error)\n                        ? {\n                          content: error.error,\n                          pointing: 'above',\n                        }\n                        : false\n                      }\n                      name={field}\n                      onChange={this.onChange}\n                      value={fields[field]}\n                    />\n                  </Form.Field>\n                );\n              })}\n              <Message\n                error\n                header='An error occurred while submitting the transaction'\n                content='Check the red fields above to correct the problems and try again.'\n              />\n              <Segment basic clearing>\n                <Button\n                  content=\"Transfer Domain\"\n                  floated=\"right\"\n                  primary\n                />\n              </Segment>\n            </Form>\n          </Segment>\n        )}\n        header=\"Transfer a FIO Domain\"\n        open={show}\n        onClose={this.hide}\n        onOpen={this.onOpen}\n        trigger={(\n          <Button\n            basic\n            content={`Transfer Domain`}\n            onClick={this.show}\n            primary\n            size=\"small\"\n          />\n        )}\n      />\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport {\n  Button,\n  Container,\n  Header,\n  Segment,\n  Table,\n} from 'semantic-ui-react';\n\nimport { uniqBy } from 'lodash';\n\nimport NewAddress from './Modals/NewAddress';\nimport NewDomain from './Modals/NewDomain';\nimport RenewDomain from './Modals/RenewDomain';\nimport SetDomainPub from './Modals/SetDomainPub';\nimport TransferDomain from './Modals/TransferDomain';\n\nexport default class Domains extends Component {\n  state = {\n    addresses: [],\n    domains: [],\n    owner_fio_public_key: '',\n  }\n  componentDidMount() {\n    const { ual: { activeUser } } = this.props;\n    if (activeUser) {\n      this.sync()\n    }\n  }\n  sync = () => {\n    const { ual: { activeUser } } = this.props;\n    this.getDomains(activeUser.accountName);\n  }\n  onSuccess = () => {\n    this.sync();\n  }\n  getDomains = (accountName) => {\n    const { ual: { activeUser: { rpc } } } = this.props;\n    rpc.get_table_rows({\n      code: 'fio.address',\n      table: 'domains',\n      scope: 'fio.address',\n      key_type: 'name',\n      index_position: 2,\n      lower_bound: accountName,\n      upper_bound: accountName,\n      limit: 10,\n    }).then((results) => {\n      this.setState({\n        domains: results.rows\n      });\n      if (results.rows.length) {\n        results.rows.map(this.getAddresses);\n      }\n    });\n    rpc.get_account(accountName).then((account) => {\n      this.setState({\n        owner_fio_public_key: account.permissions.filter((p) => p.perm_name === 'owner')[0].required_auth.keys[0].key\n      })\n    });\n  }\n  getAddresses = (domain) => {\n    const { ual: { activeUser: { rpc } } } = this.props;\n    rpc.get_table_rows({\n      code: 'fio.address',\n      table: 'fionames',\n      scope: 'fio.address',\n      key_type: 'i128',\n      index_position: 2,\n      lower_bound: domain.domainhash,\n      upper_bound: domain.domainhash,\n      limit: 10,\n    }).then((results) => {\n      this.setState({\n        addresses: uniqBy([...this.state.addresses, ...results.rows], 'id')\n      })\n    })\n  }\n  render() {\n    const {\n      addresses,\n      domains,\n    } = this.state;\n    return (\n      <Container fluid>\n        <Segment\n          attached=\"top\"\n          clearing\n          secondary\n        >\n          <Header\n            floated=\"left\"\n            size=\"large\"\n          >\n            FIO Domains\n            <Header.Subheader>\n              Manage the domains you control and address associations.\n            </Header.Subheader>\n          </Header>\n          <Button\n            content=\"Refresh Data\"\n            floated=\"right\"\n            icon=\"refresh\"\n            onClick={this.sync}\n          />\n          <NewDomain\n            onSuccess={this.onSuccess}\n            ual={this.props.ual}\n          />\n          <a class=\"ui blue right floated button\" href={ 'https://reg.fioprotocol.io/domain/fioreghelper?publicKey=' + this.state.owner_fio_public_key }><i aria-hidden=\"true\" class=\"dollar icon\"></i>Buy FIO Domain</a>\n        </Segment>\n        {(!domains.length)\n          ? (\n            <Segment\n              attached=\"bottom\"\n              size=\"large\"\n              textAlign=\"center\"\n            >\n              <Header>\n                No domains associated to this account. Register one to get started.\n              </Header>\n            </Segment>\n          )\n          : false\n        }\n        {(domains.length)\n          ? (\n            <Table\n              attached=\"bottom\"\n              padded\n              striped\n            >\n              <Table.Header>\n                <Table.Row>\n                  <Table.HeaderCell>\n                    Domain Name\n                  </Table.HeaderCell>\n                  <Table.HeaderCell>\n                    Addresses\n                  </Table.HeaderCell>\n                </Table.Row>\n              </Table.Header>\n              <Table.Body>\n                {domains.map((domain) => {\n                  const matching = addresses.filter((a) => a.domain === domain.name)\n                  return (\n                    <Table.Row>\n                      <Table.Cell collapsing verticalAlign=\"top\">\n                        <Header>\n                          @{domain.name}\n                        </Header>\n                        <Table definition>\n                          <Table.Body>\n                            <Table.Row>\n                              <Table.Cell>{(domain.is_public) ? 'Public' : 'Private'}</Table.Cell>\n                              <Table.Cell>\n                                <SetDomainPub\n                                  domain={domain}\n                                  onSuccess={this.onSuccess}\n                                  ual={this.props.ual}\n                                />\n                              </Table.Cell>\n                            </Table.Row>\n                            <Table.Row>\n                              <Table.Cell>Expires</Table.Cell>\n                              <Table.Cell>{(new Date(domain.expiration * 1000)).toUTCString()}</Table.Cell>\n                            </Table.Row>\n                            <Table.Row>\n                              <Table.Cell>Renew</Table.Cell>\n                              <Table.Cell>\n                                <RenewDomain\n                                  domain={domain}\n                                  onSuccess={this.onSuccess}\n                                  ual={this.props.ual}\n                                />\n                              </Table.Cell>\n                            </Table.Row>\n                            <Table.Row>\n                              <Table.Cell>Transfer</Table.Cell>\n                              <Table.Cell>\n                                <TransferDomain\n                                  domain={domain}\n                                  onSuccess={this.onSuccess}\n                                  ual={this.props.ual}\n                                />\n                              </Table.Cell>\n                            </Table.Row>\n                          </Table.Body>\n                        </Table>\n                      </Table.Cell>\n                      <Table.Cell textAlign=\"right\">\n                        {(matching.length)\n                          ? (\n                            <Table definition>\n                              <Table.Body>\n                                {matching.map((address) => (\n                                  <Table.Row>\n                                    <Table.Cell>{address.name}</Table.Cell>\n                                    <Table.Cell>\n                                      {address.addresses[0].public_address}\n                                      <br />\n                                      Expires: {(new Date(address.expiration * 1000)).toLocaleDateString()}\n                                      </Table.Cell>\n                                  </Table.Row>\n                                ))}\n                              </Table.Body>\n                            </Table>\n                          )\n                          : (\n                            <Segment textAlign=\"left\">\n                              <Header size=\"small\">\n                                No associated addresses\n                                <Header.Subheader>\n                                  Create a new FIO address for this domain using the button below.\n                                </Header.Subheader>\n                              </Header>\n                            </Segment>\n                          )\n                        }\n                        <NewAddress\n                          domain={domain}\n                          onSuccess={this.onSuccess}\n                          ual={this.props.ual}\n                        />\n                      </Table.Cell>\n                    </Table.Row>\n                  )\n                })}\n              </Table.Body>\n            </Table>\n          )\n          : false\n        }\n      </Container>\n\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport {\n  Container,\n  Grid,\n  Header,\n  Message,\n  Segment,\n  Tab,\n} from 'semantic-ui-react';\n\nimport Account from './components/Account';\nimport Addresses from './components/Addresses';\nimport Domains from './components/Domains';\n\nexport default class Home extends Component {\n  render() {\n    const { ual } = this.props;\n    const { chains } = ual;\n    const panes = [\n      { menuItem: 'Address Management', render: () => <Tab.Pane><Addresses ual={ual} /></Tab.Pane> },\n      { menuItem: 'Domain Management', render: () => <Tab.Pane><Domains ual={ual} /></Tab.Pane> },\n    ]\n\n    return (\n      <Container style={{\n        margin: '3em 0',\n      }}>\n        <Grid relaxed>\n          <Grid.Row>\n            <Grid.Column width={10}>\n              <Header size=\"large\">\n                FIO Registration Helper\n                <Header.Subheader>\n                  A tool to assist with domain and address registration.\n                </Header.Subheader>\n              </Header>\n            </Grid.Column>\n            <Grid.Column width={6} textAlign=\"right\">\n              <Account ual={ual} />\n            </Grid.Column>\n          </Grid.Row>\n          {(chains[0].chainId === 'b20901380af44ef59c5918439a1f9a41d83669020319a80574b804a5f95cbd7e')\n            ? (\n              <Grid.Row columns={1}>\n                <Grid.Column>\n                  <Message\n                    content={`This app is in developer mode and uses the FIO Testnet (${chains[0].chainId}).`}\n                    header=\"TESTNET Mode\"\n                    icon=\"warning sign\"\n                    size=\"large\"\n                    warning\n                  />\n                </Grid.Column>\n              </Grid.Row>\n            )\n            : (\n              <Grid.Row columns={1}>\n                <Grid.Column>\n                  <Message\n                    content={`This app is in a BETA product and is connected to the FIO Mainnet (${chains[0].chainId}).`}\n                    header=\"FIO Mainnet\"\n                    icon=\"info circle\"\n                    info\n                    size=\"large\"\n                  />\n                </Grid.Column>\n              </Grid.Row>\n            )\n          }\n          <Grid.Row columns={1}>\n            <Grid.Column>\n              {(ual.activeUser)\n                ? (\n                  <Tab\n                    menu={{\n                      attached: 'top',\n                      icon: 'home',\n                      size: 'huge',\n                      tabular: true,\n                    }}\n                    panes={panes}\n                  />\n                )\n                : (\n                  <Segment size=\"large\" stacked textAlign=\"center\">\n                    <p>Login to manage domains and addresses for the FIO blockchain.</p>\n                    <Account ual={ual} />\n                  </Segment>\n                )\n              }\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </Container>\n    )\n  }\n}\n","import React, { Component } from 'react';\n\nimport { Anchor } from 'ual-anchor'\nimport { Scatter } from 'ual-scatter'\nimport { UALProvider, withUAL } from 'ual-reactjs-renderer'\n\nimport { Segment } from 'semantic-ui-react'\n\nimport Home from './Home';\n\nconst mainnet = {\n  chainId: '21dcae42c0182200e93f954a074011f9048a7624c6fe81d3c9541a614a88bd1c',\n  name: 'FIO',\n  rpcEndpoints: [{\n    protocol: 'https',\n    host: 'fio.greymass.com',\n    port: 443,\n  }]\n}\n\nconst testnet = {\n  chainId: 'b20901380af44ef59c5918439a1f9a41d83669020319a80574b804a5f95cbd7e',\n  name: 'FIO Testnet',\n  rpcEndpoints: [{\n    protocol: 'https',\n    host: 'fiotestnet.greymass.com',\n    port: 443,\n  }]\n}\n\nclass UALWrapper extends Component {\n  render () {\n    let chain = mainnet;\n    if (window.location.search === '?testnet') {\n      chain = testnet;\n    }\n    const anchor = new Anchor([chain], { appName: 'fio-register' })\n    const scatter = new Scatter([chain], { appName: 'fio-register' })\n    return (\n      <UALProvider\n        appName='FIO Registration'\n        authenticators={[anchor, scatter]}\n        chains={[chain]}\n      >\n        <TestAppConsumer />\n        <Segment basic textAlign=\"center\">\n          {(chain.chainId === 'b20901380af44ef59c5918439a1f9a41d83669020319a80574b804a5f95cbd7e')\n            ? (\n              <a href=\"/fio-register\">Switch to use FIO Mainnet</a>\n            )\n            : (\n              <a href=\"/fio-register?testnet\">Switch to use FIO Testnet</a>\n            )\n          }\n        </Segment>\n      </UALProvider>\n    )\n  }\n}\n\nconst TestAppConsumer = withUAL(Home)\n\nconst App = () => (\n  <UALWrapper />\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './semantic/dist/semantic.min.css';\n\nif (module.hot) {\n  module.hot.accept();\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.register();\n"],"sourceRoot":""}